/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "v1_0/hdr_static_metadata.h"
#include <hdf_log.h>
#include <message_parcel.h>
#include <securec.h>

namespace OHOS {
namespace HDI {
namespace Display {
namespace Graphic {
namespace Common {
namespace V1_0 {



bool ColorXYBlockMarshalling(OHOS::MessageParcel& data, const OHOS::HDI::Display::Graphic::Common::V1_0::ColorXY& dataBlock)
{
    if (!data.WriteUnpadBuffer((const void*)&dataBlock, sizeof(OHOS::HDI::Display::Graphic::Common::V1_0::ColorXY))) {
        return false;
    }
    return true;
}

bool ColorXYBlockUnmarshalling(OHOS::MessageParcel& data, OHOS::HDI::Display::Graphic::Common::V1_0::ColorXY& dataBlock)
{
    const OHOS::HDI::Display::Graphic::Common::V1_0::ColorXY *dataBlockPtr = reinterpret_cast<const OHOS::HDI::Display::Graphic::Common::V1_0::ColorXY*>(data.ReadUnpadBuffer(sizeof(OHOS::HDI::Display::Graphic::Common::V1_0::ColorXY)));
    if (dataBlockPtr == NULL) {
        return false;
    }

    if (memcpy_s(&dataBlock, sizeof(OHOS::HDI::Display::Graphic::Common::V1_0::ColorXY), dataBlockPtr, sizeof(OHOS::HDI::Display::Graphic::Common::V1_0::ColorXY)) != EOK) {
        return false;
    }
    return true;
}

bool Smpte2086_MetadataBlockMarshalling(OHOS::MessageParcel& data, const OHOS::HDI::Display::Graphic::Common::V1_0::Smpte2086_Metadata& dataBlock)
{
    if (!data.WriteUnpadBuffer((const void*)&dataBlock, sizeof(OHOS::HDI::Display::Graphic::Common::V1_0::Smpte2086_Metadata))) {
        return false;
    }
    return true;
}

bool Smpte2086_MetadataBlockUnmarshalling(OHOS::MessageParcel& data, OHOS::HDI::Display::Graphic::Common::V1_0::Smpte2086_Metadata& dataBlock)
{
    const OHOS::HDI::Display::Graphic::Common::V1_0::Smpte2086_Metadata *dataBlockPtr = reinterpret_cast<const OHOS::HDI::Display::Graphic::Common::V1_0::Smpte2086_Metadata*>(data.ReadUnpadBuffer(sizeof(OHOS::HDI::Display::Graphic::Common::V1_0::Smpte2086_Metadata)));
    if (dataBlockPtr == NULL) {
        return false;
    }

    if (memcpy_s(&dataBlock, sizeof(OHOS::HDI::Display::Graphic::Common::V1_0::Smpte2086_Metadata), dataBlockPtr, sizeof(OHOS::HDI::Display::Graphic::Common::V1_0::Smpte2086_Metadata)) != EOK) {
        return false;
    }
    return true;
}

bool Cta861_3_MetadataBlockMarshalling(OHOS::MessageParcel& data, const OHOS::HDI::Display::Graphic::Common::V1_0::Cta861_3_Metadata& dataBlock)
{
    if (!data.WriteUnpadBuffer((const void*)&dataBlock, sizeof(OHOS::HDI::Display::Graphic::Common::V1_0::Cta861_3_Metadata))) {
        return false;
    }
    return true;
}

bool Cta861_3_MetadataBlockUnmarshalling(OHOS::MessageParcel& data, OHOS::HDI::Display::Graphic::Common::V1_0::Cta861_3_Metadata& dataBlock)
{
    const OHOS::HDI::Display::Graphic::Common::V1_0::Cta861_3_Metadata *dataBlockPtr = reinterpret_cast<const OHOS::HDI::Display::Graphic::Common::V1_0::Cta861_3_Metadata*>(data.ReadUnpadBuffer(sizeof(OHOS::HDI::Display::Graphic::Common::V1_0::Cta861_3_Metadata)));
    if (dataBlockPtr == NULL) {
        return false;
    }

    if (memcpy_s(&dataBlock, sizeof(OHOS::HDI::Display::Graphic::Common::V1_0::Cta861_3_Metadata), dataBlockPtr, sizeof(OHOS::HDI::Display::Graphic::Common::V1_0::Cta861_3_Metadata)) != EOK) {
        return false;
    }
    return true;
}

bool HdrStaticMetadataBlockMarshalling(OHOS::MessageParcel& data, const OHOS::HDI::Display::Graphic::Common::V1_0::HdrStaticMetadata& dataBlock)
{
    if (!data.WriteUnpadBuffer((const void*)&dataBlock, sizeof(OHOS::HDI::Display::Graphic::Common::V1_0::HdrStaticMetadata))) {
        return false;
    }
    return true;
}

bool HdrStaticMetadataBlockUnmarshalling(OHOS::MessageParcel& data, OHOS::HDI::Display::Graphic::Common::V1_0::HdrStaticMetadata& dataBlock)
{
    const OHOS::HDI::Display::Graphic::Common::V1_0::HdrStaticMetadata *dataBlockPtr = reinterpret_cast<const OHOS::HDI::Display::Graphic::Common::V1_0::HdrStaticMetadata*>(data.ReadUnpadBuffer(sizeof(OHOS::HDI::Display::Graphic::Common::V1_0::HdrStaticMetadata)));
    if (dataBlockPtr == NULL) {
        return false;
    }

    if (memcpy_s(&dataBlock, sizeof(OHOS::HDI::Display::Graphic::Common::V1_0::HdrStaticMetadata), dataBlockPtr, sizeof(OHOS::HDI::Display::Graphic::Common::V1_0::HdrStaticMetadata)) != EOK) {
        return false;
    }
    return true;
}

} // V1_0
} // Common
} // Graphic
} // Display
} // HDI
} // OHOS
