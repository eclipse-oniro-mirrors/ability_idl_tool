AST[name: ICellbatchingCallback file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/location_lpfence_cellbatching_v1_0/foo/location/lpfence/cellbatching/v1_0/ICellbatchingCallback.idl]
package ohos.hdi.location.lpfence.cellbatching.v1_0;

import ohos.hdi.location.lpfence.cellbatching.v1_0.CellbatchingTypes;

[mini, lite, full, callback] interface ICellbatchingCallback {
    [mini, lite, full, callback] OnCellbatchingChanged(
      [in] ohos.hdi.location.lpfence.cellbatching.v1_0.CellTrajectoryData[] data);

    [mini, lite, full, callback] OnCellbatchingReset();
}


AST[name: ICellbatchingInterface file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/location_lpfence_cellbatching_v1_0/foo/location/lpfence/cellbatching/v1_0/ICellbatchingInterface.idl]
package ohos.hdi.location.lpfence.cellbatching.v1_0;

import ohos.hdi.location.lpfence.cellbatching.v1_0.ICellbatchingCallback;
import ohos.hdi.location.lpfence.cellbatching.v1_0.CellbatchingTypes;

[mini, lite, full] interface ICellbatchingInterface {
    [mini, lite, full] RegisterCellBatchingCallback(
      [in] ohos.hdi.location.lpfence.cellbatching.v1_0.ICellbatchingCallback callbackObj);

    [mini, lite, full] UnregisterCellBatchingCallback(
      [in] ohos.hdi.location.lpfence.cellbatching.v1_0.ICellbatchingCallback callbackObj);

    [mini, lite, full] CellbatchingSwitch(
      [in] ohos.hdi.location.lpfence.cellbatching.v1_0.CellbatchingRequest req);

    [mini, lite, full] FlushCellbatching();
}


AST[name: CellbatchingTypes file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/location_lpfence_cellbatching_v1_0/foo/location/lpfence/cellbatching/v1_0/CellbatchingTypes.idl]
package ohos.hdi.location.lpfence.cellbatching.v1_0;

[mini, lite, full] enum CellbatchingSwitch : int {
  SWITCH_OFF = 0,
  SWITCH_ON = 1,
};

[mini, lite, full] struct CellbatchingRequest {
  int status;
  int interval;
};

[mini, lite, full] struct CellTrajectoryData {
  unsigned int timeStampLow;
  unsigned int timeStampHigh;
  unsigned long cid;
  unsigned int lac;
  unsigned short rssi;
  unsigned short mcc;
  unsigned short mnc;
};


