/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef OHOS_HDI_DISTRIBUTED_AUDIO_AUDIO_V1_0_AUDIOCAPTURESTUB_H
#define OHOS_HDI_DISTRIBUTED_AUDIO_AUDIO_V1_0_AUDIOCAPTURESTUB_H

#include <ipc_object_stub.h>
#include <message_option.h>
#include <message_parcel.h>
#include <object_collector.h>
#include <refbase.h>
#include "v1_0/iaudio_capture.h"

namespace OHOS {
namespace HDI {
namespace DistributedAudio {
namespace Audio {
namespace V1_0 {

using namespace OHOS;
class AudioCaptureStub : public IPCObjectStub {
public:
    explicit AudioCaptureStub(const sptr<IAudioCapture> &impl);
    virtual ~AudioCaptureStub();

    int32_t OnRemoteRequest(uint32_t code, MessageParcel &data, MessageParcel &reply, MessageOption &option) override;

    static int32_t AudioCaptureStubCaptureFrame_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubGetCapturePosition_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubCheckSceneCapability_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubSelectScene_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubSetMute_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubGetMute_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubSetVolume_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubGetVolume_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubGetGainThreshold_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubGetGain_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubSetGain_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubGetFrameSize_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubGetFrameCount_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubSetSampleAttributes_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubGetSampleAttributes_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubGetCurrentChannelId_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubSetExtraParams_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubGetExtraParams_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubReqMmapBuffer_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubGetMmapPosition_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubAddAudioEffect_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubRemoveAudioEffect_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubGetFrameBufferSize_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubStart_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubStop_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubPause_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubResume_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubFlush_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubTurnStandbyMode_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubAudioDevDump_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubIsSupportsPauseAndResume_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

    static int32_t AudioCaptureStubGetVersion_(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption, sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl);

private:
    int32_t AudioCaptureStubCaptureFrame(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubGetCapturePosition(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubCheckSceneCapability(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubSelectScene(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubSetMute(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubGetMute(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubSetVolume(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubGetVolume(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubGetGainThreshold(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubGetGain(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubSetGain(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubGetFrameSize(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubGetFrameCount(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubSetSampleAttributes(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubGetSampleAttributes(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubGetCurrentChannelId(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubSetExtraParams(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubGetExtraParams(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubReqMmapBuffer(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubGetMmapPosition(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubAddAudioEffect(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubRemoveAudioEffect(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubGetFrameBufferSize(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubStart(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubStop(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubPause(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubResume(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubFlush(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubTurnStandbyMode(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubAudioDevDump(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubIsSupportsPauseAndResume(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);

    int32_t AudioCaptureStubGetVersion(MessageParcel& audioCaptureData, MessageParcel& audioCaptureReply, MessageOption& audioCaptureOption);


    static inline ObjectDelegator<OHOS::HDI::DistributedAudio::Audio::V1_0::AudioCaptureStub, OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> objDelegator_;
    sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioCapture> impl_;
};
} // V1_0
} // Audio
} // DistributedAudio
} // HDI
} // OHOS

#endif // OHOS_HDI_DISTRIBUTED_AUDIO_AUDIO_V1_0_AUDIOCAPTURESTUB_H

