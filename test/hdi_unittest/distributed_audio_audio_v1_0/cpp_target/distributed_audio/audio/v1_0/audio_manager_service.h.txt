/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef OHOS_HDI_DISTRIBUTED_AUDIO_AUDIO_V1_0_AUDIOMANAGERSERVICE_H
#define OHOS_HDI_DISTRIBUTED_AUDIO_AUDIO_V1_0_AUDIOMANAGERSERVICE_H

#include "v1_0/iaudio_manager.h"

namespace OHOS {
namespace HDI {
namespace DistributedAudio {
namespace Audio {
namespace V1_0 {
class AudioManagerService : public OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioManager {
public:
    AudioManagerService() = default;
    virtual ~AudioManagerService() = default;

    int32_t GetAllAdapters(std::vector<OHOS::HDI::DistributedAudio::Audio::V1_0::AudioAdapterDescriptor>& descs) override;

    int32_t LoadAdapter(const OHOS::HDI::DistributedAudio::Audio::V1_0::AudioAdapterDescriptor& desc,
         sptr<OHOS::HDI::DistributedAudio::Audio::V1_0::IAudioAdapter>& adapter) override;

    int32_t UnloadAdapter(const std::string& adapterName) override;

    int32_t ReleaseAudioManagerObject() override;

};
} // V1_0
} // Audio
} // DistributedAudio
} // HDI
} // OHOS

#endif // OHOS_HDI_DISTRIBUTED_AUDIO_AUDIO_V1_0_AUDIOMANAGERSERVICE_H

