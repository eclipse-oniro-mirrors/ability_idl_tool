/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "v1_1/intell_voice_trigger_adapter_service.h"
#include <hdf_base.h>

#define HDF_LOG_TAG    intell_voice_trigger_adapter_service

namespace OHOS {
namespace HDI {
namespace IntelligentVoice {
namespace Trigger {
namespace V1_1 {
int32_t IntellVoiceTriggerAdapterService::SetParams(const std::string& key, const std::string& value)
{
    return HDF_SUCCESS;
}

int32_t IntellVoiceTriggerAdapterService::GetParams(const std::string& key, std::string& value)
{
    return HDF_SUCCESS;
}

int32_t IntellVoiceTriggerAdapterService::GetProperties(OHOS::HDI::IntelligentVoice::Trigger::V1_0::IntellVoiceTriggerProperties& properties)
{
    return HDF_SUCCESS;
}

int32_t IntellVoiceTriggerAdapterService::LoadModel(const OHOS::HDI::IntelligentVoice::Trigger::V1_0::IntellVoiceTriggerModel& model, const sptr<OHOS::HDI::IntelligentVoice::Trigger::V1_0::IIntellVoiceTriggerCallback>& triggerCallback, int32_t cookie, int32_t& handle)
{
    return HDF_SUCCESS;
}

int32_t IntellVoiceTriggerAdapterService::UnloadModel(int32_t handle)
{
    return HDF_SUCCESS;
}

int32_t IntellVoiceTriggerAdapterService::Start(int32_t handle)
{
    return HDF_SUCCESS;
}

int32_t IntellVoiceTriggerAdapterService::Stop(int32_t handle)
{
    return HDF_SUCCESS;
}

} // V1_1
} // Trigger
} // IntelligentVoice
} // HDI
} // OHOS
