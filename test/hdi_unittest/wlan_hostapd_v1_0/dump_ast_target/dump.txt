AST[name: IHostapdInterface file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/wlan_hostapd_v1_0/foo/wlan/hostapd/v1_0/IHostapdInterface.idl]
package ohos.hdi.wlan.hostapd.v1_0;

import ohos.hdi.wlan.hostapd.v1_0.IHostapdCallback;
import ohos.hdi.wlan.hostapd.v1_0.HostapdTypes;

[mini, lite, full] interface IHostapdInterface {
    [mini, lite, full] StartAp();

    [mini, lite, full] StopAp();

    [mini, lite, full] EnableAp(
      [in] std::string ifName,
      [in] int id);

    [mini, lite, full] DisableAp(
      [in] std::string ifName,
      [in] int id);

    [mini, lite, full] SetApPasswd(
      [in] std::string ifName,
      [in] std::string pass,
      [in] int id);

    [mini, lite, full] SetApName(
      [in] std::string ifName,
      [in] std::string name,
      [in] int id);

    [mini, lite, full] SetApWpaValue(
      [in] std::string ifName,
      [in] int securityType,
      [in] int id);

    [mini, lite, full] SetApBand(
      [in] std::string ifName,
      [in] int band,
      [in] int id);

    [mini, lite, full] SetAp80211n(
      [in] std::string ifName,
      [in] int value,
      [in] int id);

    [mini, lite, full] SetApWmm(
      [in] std::string ifName,
      [in] int value,
      [in] int id);

    [mini, lite, full] SetApChannel(
      [in] std::string ifName,
      [in] int channel,
      [in] int id);

    [mini, lite, full] SetApMaxConn(
      [in] std::string ifName,
      [in] int maxConn,
      [in] int id);

    [mini, lite, full] SetMacFilter(
      [in] std::string ifName,
      [in] std::string mac,
      [in] int id);

    [mini, lite, full] DelMacFilter(
      [in] std::string ifName,
      [in] std::string mac,
      [in] int id);

    [mini, lite, full] GetStaInfos(
      [in] std::string ifName,
      [out] std::string buf,
      [in] int size,
      [in] int id);

    [mini, lite, full] DisassociateSta(
      [in] std::string ifName,
      [in] std::string mac,
      [in] int id);

    [mini, lite, full] RegisterEventCallback(
      [in] ohos.hdi.wlan.hostapd.v1_0.IHostapdCallback cbFunc,
      [in] std::string ifName);

    [mini, lite, full] UnregisterEventCallback(
      [in] ohos.hdi.wlan.hostapd.v1_0.IHostapdCallback cbFunc,
      [in] std::string ifName);

    [mini, lite, full] HostApdShellCmd(
      [in] std::string ifName,
      [in] std::string cmd);
}


AST[name: IHostapdCallback file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/wlan_hostapd_v1_0/foo/wlan/hostapd/v1_0/IHostapdCallback.idl]
package ohos.hdi.wlan.hostapd.v1_0;

import ohos.hdi.wlan.hostapd.v1_0.HostapdTypes;

[mini, lite, full, callback] interface IHostapdCallback {
    [mini, lite, full, callback] OnEventStaJoin(
      [in] ohos.hdi.wlan.hostapd.v1_0.HdiApCbParm apCbParm,
      [in] std::string ifName);

    [mini, lite, full, callback] OnEventApState(
      [in] ohos.hdi.wlan.hostapd.v1_0.HdiApCbParm apCbParm,
      [in] std::string ifName);

    [mini, lite, full, callback] OnEventHostApdNotify(
      [in] std::string notifyParam,
      [in] std::string ifName);
}


AST[name: HostapdTypes file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/wlan_hostapd_v1_0/foo/wlan/hostapd/v1_0/HostapdTypes.idl]
package ohos.hdi.wlan.hostapd.v1_0;

[mini, lite, full] struct HdiApCbParm {
  std::string content;
  int id;
};


