AST[name: IMapper file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/display_buffer_v1_0/foo/display/buffer/v1_0/IMapper.idl]
package ohos.hdi.display.buffer.v1_0;

import ohos.hdi.display.buffer.v1_0.DisplayBufferType;

[mini, lite, full] interface IMapper {
    [mini, lite, full] FreeMem(
      [in] NativeBuffer handle);

    [mini, lite, full] Mmap(
      [in] NativeBuffer handle);

    [mini, lite, full] Unmap(
      [in] NativeBuffer handle);

    [mini, lite, full] FlushCache(
      [in] NativeBuffer handle);

    [mini, lite, full] InvalidateCache(
      [in] NativeBuffer handle);
}


AST[name: IAllocator file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/display_buffer_v1_0/foo/display/buffer/v1_0/IAllocator.idl]
package ohos.hdi.display.buffer.v1_0;

import ohos.hdi.display.buffer.v1_0.DisplayBufferType;

[mini, lite, full] interface IAllocator {
    [mini, lite, full] AllocMem(
      [in] ohos.hdi.display.buffer.v1_0.AllocInfo info,
      [out] NativeBuffer handle);
}


AST[name: DisplayBufferType file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/display_buffer_v1_0/foo/display/buffer/v1_0/DisplayBufferType.idl]
package ohos.hdi.display.buffer.v1_0;

[mini, lite, full] struct AllocInfo {
  unsigned int width;
  unsigned int height;
  unsigned long usage;
  unsigned int format;
  unsigned int expectedSize;
};

[mini, lite, full] struct VerifyAllocInfo {
  unsigned int width;
  unsigned int height;
  unsigned long usage;
  unsigned int format;
};


