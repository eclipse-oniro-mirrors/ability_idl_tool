/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "v2_0/prepared_model_service.h"
#include <hdf_base.h>

#define HDF_LOG_TAG    prepared_model_service

namespace OHOS {
namespace HDI {
namespace Nnrt {
namespace V2_0 {
int32_t PreparedModelService::ExportModelCache(std::vector<OHOS::HDI::Nnrt::V2_0::SharedBuffer>& modelCache)
{
    return HDF_SUCCESS;
}

int32_t PreparedModelService::GetInputDimRanges(std::vector<std::vector<uint32_t>>& minInputDims,
     std::vector<std::vector<uint32_t>>& maxInputDims)
{
    return HDF_SUCCESS;
}

int32_t PreparedModelService::Run(const std::vector<OHOS::HDI::Nnrt::V2_0::IOTensor>& inputs,
     const std::vector<OHOS::HDI::Nnrt::V2_0::IOTensor>& outputs, std::vector<std::vector<int32_t>>& outputDims)
{
    return HDF_SUCCESS;
}

} // V2_0
} // Nnrt
} // HDI
} // OHOS
