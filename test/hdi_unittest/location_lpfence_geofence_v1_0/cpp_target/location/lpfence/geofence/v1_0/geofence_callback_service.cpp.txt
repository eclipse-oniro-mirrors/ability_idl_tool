/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "v1_0/geofence_callback_service.h"
#include <hdf_base.h>

#define HDF_LOG_TAG    geofence_callback_service

namespace OHOS {
namespace HDI {
namespace Location {
namespace Lpfence {
namespace Geofence {
namespace V1_0 {
int32_t GeofenceCallbackService::OnGeofenceAddResultCb(const std::vector<OHOS::HDI::Location::Lpfence::Geofence::V1_0::GeofenceResult>& res)
{
    return HDF_SUCCESS;
}

int32_t GeofenceCallbackService::OnGeofenceRemoveResultCb(const std::vector<OHOS::HDI::Location::Lpfence::Geofence::V1_0::GeofenceResult>& res)
{
    return HDF_SUCCESS;
}

int32_t GeofenceCallbackService::OnGeofenceTransitionCb(int32_t geofenceId,
     const OHOS::HDI::Location::Lpfence::Geofence::V1_0::GeoLocationInfo& location, uint8_t transition, int64_t timestamp)
{
    return HDF_SUCCESS;
}

int32_t GeofenceCallbackService::OnGetGeofenceSizeCb(const OHOS::HDI::Location::Lpfence::Geofence::V1_0::GeofenceSize& size)
{
    return HDF_SUCCESS;
}

int32_t GeofenceCallbackService::OnGeofenceRequestCellDb(const OHOS::HDI::Location::Lpfence::Geofence::V1_0::RequestCellDb& req)
{
    return HDF_SUCCESS;
}

int32_t GeofenceCallbackService::OnGetCurrentLocationCb(int32_t locSource,
     const OHOS::HDI::Location::Lpfence::Geofence::V1_0::GeoLocationInfo& location)
{
    return HDF_SUCCESS;
}

int32_t GeofenceCallbackService::OnGeofenceReset()
{
    return HDF_SUCCESS;
}

} // V1_0
} // Geofence
} // Lpfence
} // Location
} // HDI
} // OHOS
