/*
 * Copyright (c) 2022 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "v1_0/gnss_callback_service.h"
#include <hdf_base.h>

#define HDF_LOG_TAG    gnss_callback_service

namespace OHOS {
namespace HDI {
namespace Location {
namespace Gnss {
namespace V1_0 {
int32_t GnssCallbackService::ReportLocation(const OHOS::HDI::Location::Gnss::V1_0::LocationInfo& location)
{
    return HDF_SUCCESS;
}

int32_t GnssCallbackService::ReportGnssWorkingStatus(OHOS::HDI::Location::Gnss::V1_0::GnssWorkingStatus status)
{
    return HDF_SUCCESS;
}

int32_t GnssCallbackService::ReportNmea(int64_t timestamp, const std::string& nmea, int32_t length)
{
    return HDF_SUCCESS;
}

int32_t GnssCallbackService::ReportGnssCapabilities(OHOS::HDI::Location::Gnss::V1_0::GnssCapabilities capabilities)
{
    return HDF_SUCCESS;
}

int32_t GnssCallbackService::ReportSatelliteStatusInfo(const OHOS::HDI::Location::Gnss::V1_0::SatelliteStatusInfo& info)
{
    return HDF_SUCCESS;
}

int32_t GnssCallbackService::RequestGnssReferenceInfo(OHOS::HDI::Location::Gnss::V1_0::GnssRefInfoType type)
{
    return HDF_SUCCESS;
}

int32_t GnssCallbackService::RequestPredictGnssData()
{
    return HDF_SUCCESS;
}

int32_t GnssCallbackService::ReportCachedLocation(const std::vector<OHOS::HDI::Location::Gnss::V1_0::LocationInfo>& gnssLocations)
{
    return HDF_SUCCESS;
}

} // V1_0
} // Gnss
} // Location
} // HDI
} // OHOS
