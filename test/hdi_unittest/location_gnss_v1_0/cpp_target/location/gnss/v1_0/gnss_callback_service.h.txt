/*
 * Copyright (c) 2022 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef OHOS_HDI_LOCATION_GNSS_V1_0_GNSSCALLBACKSERVICE_H
#define OHOS_HDI_LOCATION_GNSS_V1_0_GNSSCALLBACKSERVICE_H

#include "v1_0/ignss_callback.h"

namespace OHOS {
namespace HDI {
namespace Location {
namespace Gnss {
namespace V1_0 {
class GnssCallbackService : public OHOS::HDI::Location::Gnss::V1_0::IGnssCallback {
public:
    GnssCallbackService() = default;
    virtual ~GnssCallbackService() = default;

    int32_t ReportLocation(const OHOS::HDI::Location::Gnss::V1_0::LocationInfo& location) override;

    int32_t ReportGnssWorkingStatus(OHOS::HDI::Location::Gnss::V1_0::GnssWorkingStatus status) override;

    int32_t ReportNmea(int64_t timestamp, const std::string& nmea, int32_t length) override;

    int32_t ReportGnssCapabilities(OHOS::HDI::Location::Gnss::V1_0::GnssCapabilities capabilities) override;

    int32_t ReportSatelliteStatusInfo(const OHOS::HDI::Location::Gnss::V1_0::SatelliteStatusInfo& info) override;

    int32_t RequestGnssReferenceInfo(OHOS::HDI::Location::Gnss::V1_0::GnssRefInfoType type) override;

    int32_t RequestPredictGnssData() override;

    int32_t ReportCachedLocation(const std::vector<OHOS::HDI::Location::Gnss::V1_0::LocationInfo>& gnssLocations) override;

};
} // V1_0
} // Gnss
} // Location
} // HDI
} // OHOS

#endif // OHOS_HDI_LOCATION_GNSS_V1_0_GNSSCALLBACKSERVICE_H

