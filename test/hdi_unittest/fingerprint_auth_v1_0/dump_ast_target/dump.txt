AST[name: IExecutor file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/fingerprint_auth_v1_0/foo/fingerprint_auth/v1_0/IExecutor.idl]
package ohos.hdi.fingerprint_auth.v1_0;

import ohos.hdi.fingerprint_auth.v1_0.IExecutorCallback;
import ohos.hdi.fingerprint_auth.v1_0.FingerprintAuthTypes;

[mini, lite, full] interface IExecutor {
    [mini, lite, full] GetExecutorInfo(
      [out] ohos.hdi.fingerprint_auth.v1_0.ExecutorInfo executorInfo);

    [mini, lite, full] GetTemplateInfo(
      [in] unsigned long templateId,
      [out] ohos.hdi.fingerprint_auth.v1_0.TemplateInfo templateInfo);

    [mini, lite, full] OnRegisterFinish(
      [in] unsigned long[] templateIdList,
      [in] unsigned char[] frameworkPublicKey,
      [in] unsigned char[] extraInfo);

    [mini, lite, full] Enroll(
      [in] unsigned long scheduleId,
      [in] unsigned char[] extraInfo,
      [in] ohos.hdi.fingerprint_auth.v1_0.IExecutorCallback callbackObj);

    [mini, lite, full] Authenticate(
      [in] unsigned long scheduleId,
      [in] unsigned long[] templateIdList,
      [in] unsigned char[] extraInfo,
      [in] ohos.hdi.fingerprint_auth.v1_0.IExecutorCallback callbackObj);

    [mini, lite, full] Identify(
      [in] unsigned long scheduleId,
      [in] unsigned char[] extraInfo,
      [in] ohos.hdi.fingerprint_auth.v1_0.IExecutorCallback callbackObj);

    [mini, lite, full] Delete(
      [in] unsigned long[] templateIdList);

    [mini, lite, full] Cancel(
      [in] unsigned long scheduleId);

    [mini, lite, full] SendCommand(
      [in] int commandId,
      [in] unsigned char[] extraInfo,
      [in] ohos.hdi.fingerprint_auth.v1_0.IExecutorCallback callbackObj);
}


AST[name: IExecutorCallback file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/fingerprint_auth_v1_0/foo/fingerprint_auth/v1_0/IExecutorCallback.idl]
package ohos.hdi.fingerprint_auth.v1_0;

[mini, lite, full, callback] interface IExecutorCallback {
    [mini, lite, full, callback] OnResult(
      [in] int result,
      [in] unsigned char[] extraInfo);

    [mini, lite, full, callback] OnTip(
      [in] int tip,
      [in] unsigned char[] extraInfo);
}


AST[name: IFingerprintAuthInterface file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/fingerprint_auth_v1_0/foo/fingerprint_auth/v1_0/IFingerprintAuthInterface.idl]
package ohos.hdi.fingerprint_auth.v1_0;

import ohos.hdi.fingerprint_auth.v1_0.IExecutor;

[mini, lite, full] interface IFingerprintAuthInterface {
    [mini, lite, full] GetExecutorList(
      [out] ohos.hdi.fingerprint_auth.v1_0.IExecutor[] executorList);
}


AST[name: FingerprintAuthTypes file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/fingerprint_auth_v1_0/foo/fingerprint_auth/v1_0/FingerprintAuthTypes.idl]
package ohos.hdi.fingerprint_auth.v1_0;

[mini, lite, full] enum AuthType : int {
  PIN = 1,
  FACE = 2,
  FINGERPRINT = 4,
};

[mini, lite, full] enum ExecutorRole : int {
  COLLECTOR = 1,
  VERIFIER = 2,
  ALL_IN_ONE = 3,
};

[mini, lite, full] enum ExecutorSecureLevel : int {
  ESL0 = 0,
  ESL1 = 1,
  ESL2 = 2,
  ESL3 = 3,
};

[mini, lite, full] enum CommandId : int {
  LOCK_TEMPLATE = 1,
  UNLOCK_TEMPLATE = 2,
  VENDOR_COMMAND_BEGIN = 10000,
};

[mini, lite, full] enum FingerprintTipsCode : int {
  FINGERPRINT_AUTH_TIP_GOOD = 0,
  FINGERPRINT_AUTH_TIP_DIRTY = 1,
  FINGERPRINT_AUTH_TIP_INSUFFICIENT = 2,
  FINGERPRINT_AUTH_TIP_PARTIAL = 3,
  FINGERPRINT_AUTH_TIP_TOO_FAST = 4,
  FINGERPRINT_AUTH_TIP_TOO_SLOW = 5,
  VENDOR_FINGERPRINT_AUTH_TIP_BEGIN = 10000,
};

[mini, lite, full] struct ExecutorInfo {
  unsigned short sensorId;
  unsigned int executorType;
  ohos.hdi.fingerprint_auth.v1_0.ExecutorRole executorRole;
  ohos.hdi.fingerprint_auth.v1_0.AuthType authType;
  ohos.hdi.fingerprint_auth.v1_0.ExecutorSecureLevel esl;
  unsigned char[] publicKey;
  unsigned char[] extraInfo;
};

[mini, lite, full] struct TemplateInfo {
  unsigned int executorType;
  int lockoutDuration;
  int remainAttempts;
  unsigned char[] extraInfo;
};


