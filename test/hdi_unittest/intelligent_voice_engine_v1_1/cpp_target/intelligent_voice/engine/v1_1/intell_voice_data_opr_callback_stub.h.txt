/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef OHOS_HDI_INTELLIGENT_VOICE_ENGINE_V1_1_INTELLVOICEDATAOPRCALLBACKSTUB_H
#define OHOS_HDI_INTELLIGENT_VOICE_ENGINE_V1_1_INTELLVOICEDATAOPRCALLBACKSTUB_H

#include <ipc_object_stub.h>
#include <message_option.h>
#include <message_parcel.h>
#include <object_collector.h>
#include <refbase.h>
#include "v1_1/iintell_voice_data_opr_callback.h"

namespace OHOS {
namespace HDI {
namespace IntelligentVoice {
namespace Engine {
namespace V1_1 {

using namespace OHOS;
class IntellVoiceDataOprCallbackStub : public IPCObjectStub {
public:
    explicit IntellVoiceDataOprCallbackStub(const sptr<IIntellVoiceDataOprCallback> &impl);
    virtual ~IntellVoiceDataOprCallbackStub();

    int32_t OnRemoteRequest(uint32_t code, MessageParcel &data, MessageParcel &reply, MessageOption &option) override;

    static int32_t IntellVoiceDataOprCallbackStubOnIntellVoiceDataOprEvent_(MessageParcel& intellVoiceDataOprCallbackData, MessageParcel& intellVoiceDataOprCallbackReply, MessageOption& intellVoiceDataOprCallbackOption, sptr<OHOS::HDI::IntelligentVoice::Engine::V1_1::IIntellVoiceDataOprCallback> impl);

    static int32_t IntellVoiceDataOprCallbackStubGetVersion_(MessageParcel& intellVoiceDataOprCallbackData, MessageParcel& intellVoiceDataOprCallbackReply, MessageOption& intellVoiceDataOprCallbackOption, sptr<OHOS::HDI::IntelligentVoice::Engine::V1_1::IIntellVoiceDataOprCallback> impl);

private:
    int32_t IntellVoiceDataOprCallbackStubOnIntellVoiceDataOprEvent(MessageParcel& intellVoiceDataOprCallbackData, MessageParcel& intellVoiceDataOprCallbackReply, MessageOption& intellVoiceDataOprCallbackOption);

    int32_t IntellVoiceDataOprCallbackStubGetVersion(MessageParcel& intellVoiceDataOprCallbackData, MessageParcel& intellVoiceDataOprCallbackReply, MessageOption& intellVoiceDataOprCallbackOption);


    static inline ObjectDelegator<OHOS::HDI::IntelligentVoice::Engine::V1_1::IntellVoiceDataOprCallbackStub, OHOS::HDI::IntelligentVoice::Engine::V1_1::IIntellVoiceDataOprCallback> objDelegator_;
    sptr<OHOS::HDI::IntelligentVoice::Engine::V1_1::IIntellVoiceDataOprCallback> impl_;
};
} // V1_1
} // Engine
} // IntelligentVoice
} // HDI
} // OHOS

#endif // OHOS_HDI_INTELLIGENT_VOICE_ENGINE_V1_1_INTELLVOICEDATAOPRCALLBACKSTUB_H

