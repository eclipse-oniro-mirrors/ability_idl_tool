AST[name: IActivityInterface file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/a_recognition_v1_0/foo/a_recognition/v1_0/IActivityInterface.idl]
package ohos.hdi.a_recognition.v1_0;

import ohos.hdi.a_recognition.v1_0.IActivityChangedCallback;
import ohos.hdi.a_recognition.v1_0.ActivityRecognitionTypes;

[mini, lite, full] interface IActivityInterface {
    [mini, lite, full] RegisterActRecognitionCallback(
      [in] ohos.hdi.a_recognition.v1_0.IActivityChangedCallback callbackObj);

    [mini, lite, full] UnregisterActRecognitionCallback(
      [in] ohos.hdi.a_recognition.v1_0.IActivityChangedCallback callbackObj);

    [mini, lite, full] GetSupportActivity(
      [out] std::string[] activity);

    [mini, lite, full] GetCurrentActivity(
      [out] ohos.hdi.a_recognition.v1_0.ActRecognitionEvent[] event);

    [mini, lite, full] EnableActRecognitionEvent(
      [in] int activity,
      [in] int eventType,
      [in] long maxReportLatencyNs,
      [in] int powerMode);

    [mini, lite, full] DisableActRecognitionEvent(
      [in] int activity,
      [in] int eventType);

    [mini, lite, full] FlushActivity();
}


AST[name: IActivityChangedCallback file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/a_recognition_v1_0/foo/a_recognition/v1_0/IActivityChangedCallback.idl]
package ohos.hdi.a_recognition.v1_0;

import ohos.hdi.a_recognition.v1_0.ActivityRecognitionTypes;

[mini, lite, full, callback] interface IActivityChangedCallback {
    [mini, lite, full, callback] OnActivityChanged(
      [in] ohos.hdi.a_recognition.v1_0.ActRecognitionEvent[] event);
}


AST[name: ActivityRecognitionTypes file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/a_recognition_v1_0/foo/a_recognition/v1_0/ActivityRecognitionTypes.idl]
package ohos.hdi.a_recognition.v1_0;

[mini, lite, full] enum ActRecognitionEventType : int {
  ACT_RECOGNITION_EVENT_ENTER = 0x01,
  ACT_RECOGNITION_EVENT_EXIT = 0x02,
};

[mini, lite, full] enum ActRecognitionPowerMode : int {
  ACT_RECOGNITION_NORMAL_MODE = 0,
  ACT_RECOGNITION_LOW_POWER_MODE = 1,
};

[mini, lite, full] struct ActRecognitionEvent {
  int activity;
  int eventType;
  long timestamp;
  int confidence;
};


