/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef OHOS_HDI_INTELLIGENT_VOICE_ENGINE_V1_0_INTELLVOICEENGINEMANAGERSERVICE_H
#define OHOS_HDI_INTELLIGENT_VOICE_ENGINE_V1_0_INTELLVOICEENGINEMANAGERSERVICE_H

#include "v1_0/iintell_voice_engine_manager.h"

namespace OHOS {
namespace HDI {
namespace IntelligentVoice {
namespace Engine {
namespace V1_0 {
class IntellVoiceEngineManagerService : public OHOS::HDI::IntelligentVoice::Engine::V1_0::IIntellVoiceEngineManager {
public:
    IntellVoiceEngineManagerService() = default;
    virtual ~IntellVoiceEngineManagerService() = default;

    int32_t GetAdapterDescriptors(std::vector<OHOS::HDI::IntelligentVoice::Engine::V1_0::IntellVoiceEngineAdapterDescriptor>& descs) override;

    int32_t CreateAdapter(const OHOS::HDI::IntelligentVoice::Engine::V1_0::IntellVoiceEngineAdapterDescriptor& descriptor, sptr<OHOS::HDI::IntelligentVoice::Engine::V1_0::IIntellVoiceEngineAdapter>& adapter) override;

    int32_t ReleaseAdapter(const OHOS::HDI::IntelligentVoice::Engine::V1_0::IntellVoiceEngineAdapterDescriptor& descriptor) override;

};
} // V1_0
} // Engine
} // IntelligentVoice
} // HDI
} // OHOS

#endif // OHOS_HDI_INTELLIGENT_VOICE_ENGINE_V1_0_INTELLVOICEENGINEMANAGERSERVICE_H

