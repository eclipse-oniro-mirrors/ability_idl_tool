AST[name: IVibratorInterface file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/vibrator_v1_1/foo/vibrator/v1_1/IVibratorInterface.idl]
package ohos.hdi.vibrator.v1_1;

import ohos.hdi.vibrator.v1_1.VibratorTypes;

[mini, lite, full] interface IVibratorInterface {
    [mini, lite, full] StartOnce(
      [in] unsigned int duration);

    [mini, lite, full] Start(
      [in] std::string effectType);

    [mini, lite, full] Stop(
      [in] ohos.hdi.vibrator.v1_1.HdfVibratorMode mode);

    [mini, lite, full] GetVibratorInfo(
      [out] ohos.hdi.vibrator.v1_1.HdfVibratorInfo[] vibratorInfo);

    [mini, lite, full] EnableVibratorModulation(
      [in] unsigned int duration,
      [in] unsigned short intensity,
      [in] short frequency);

    [mini, lite, full] EnableCompositeEffect(
      [in] ohos.hdi.vibrator.v1_1.HdfCompositeEffect effect);

    [mini, lite, full] GetEffectInfo(
      [in] std::string effectType,
      [out] ohos.hdi.vibrator.v1_1.HdfEffectInfo effectInfo);

    [mini, lite, full] IsVibratorRunning(
      [out] boolean state);
}


AST[name: VibratorTypes file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/vibrator_v1_1/foo/vibrator/v1_1/VibratorTypes.idl]
package ohos.hdi.vibrator.v1_1;

[mini, lite, full] enum HdfVibratorMode : int {
  HDF_VIBRATOR_MODE_ONCE,
  HDF_VIBRATOR_MODE_PRESET,
  HDF_VIBRATOR_MODE_BUTT,
};

[mini, lite, full] enum HdfEffectType : int {
  HDF_EFFECT_TYPE_TIME,
  HDF_EFFECT_TYPE_PRIMITIVE,
  HDF_EFFECT_TYPE_BUTT,
};

[mini, lite, full] struct HdfVibratorInfo {
  boolean isSupportIntensity;
  boolean isSupportFrequency;
  unsigned short intensityMaxValue;
  unsigned short intensityMinValue;
  short frequencyMaxValue;
  short frequencyMinValue;
};

[mini, lite, full] struct TimeEffect {
  int delay;
  int time;
  unsigned short intensity;
  short frequency;
};

[mini, lite, full] struct PrimitiveEffect {
  int delay;
  int effectId;
  unsigned short intensity;
};

[mini, lite, full] union CompositeEffect {
  ohos.hdi.vibrator.v1_1.TimeEffect timeEffect;
  ohos.hdi.vibrator.v1_1.PrimitiveEffect primitiveEffect;
};

[mini, lite, full] struct HdfCompositeEffect {
  int type;
  ohos.hdi.vibrator.v1_1.CompositeEffect[] compositeEffects;
};

[mini, lite, full] struct HdfEffectInfo {
  int duration;
  boolean isSupportEffect;
};


