/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef OHOS_HDI_LOCATION_LPFENCE_WIFIFENCE_V1_0_WIFIFENCEINTERFACESERVICE_H
#define OHOS_HDI_LOCATION_LPFENCE_WIFIFENCE_V1_0_WIFIFENCEINTERFACESERVICE_H

#include "v1_0/iwififence_interface.h"

namespace OHOS {
namespace HDI {
namespace Location {
namespace Lpfence {
namespace Wififence {
namespace V1_0 {
class WififenceInterfaceService : public OHOS::HDI::Location::Lpfence::Wififence::V1_0::IWififenceInterface {
public:
    WififenceInterfaceService() = default;
    virtual ~WififenceInterfaceService() = default;

    int32_t RegisterWififenceCallback(const sptr<OHOS::HDI::Location::Lpfence::Wififence::V1_0::IWififenceCallback>& callbackObj) override;

    int32_t UnregisterWififenceCallback(const sptr<OHOS::HDI::Location::Lpfence::Wififence::V1_0::IWififenceCallback>& callbackObj) override;

    int32_t AddWififences(const std::vector<OHOS::HDI::Location::Lpfence::Wififence::V1_0::WififenceRequest>& wififence) override;

    int32_t RemoveWififences(const std::vector<int32_t>& wififenceId) override;

    int32_t GetWififenceStatus(int32_t wififenceId) override;

    int32_t GetWififenceSize() override;

};
} // V1_0
} // Wififence
} // Lpfence
} // Location
} // HDI
} // OHOS

#endif // OHOS_HDI_LOCATION_LPFENCE_WIFIFENCE_V1_0_WIFIFENCEINTERFACESERVICE_H

