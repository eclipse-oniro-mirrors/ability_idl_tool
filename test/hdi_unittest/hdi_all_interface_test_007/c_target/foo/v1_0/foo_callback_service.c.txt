/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "v1_0/foo_callback_service.h"
#include <hdf_base.h>
#include <hdf_core_log.h>
#include <osal_mem.h>
#include <securec.h>

#define HDF_LOG_TAG    foo_callback_service

static int32_t FooCallbackPushData(struct IFooCallback *self, const char* message)
{
    return HDF_SUCCESS;
}

static int32_t FooCallbackGetVersion(struct IFooCallback *self, uint32_t* majorVer, uint32_t* minorVer)
{
    *majorVer = IFOO_CALLBACK_MAJOR_VERSION;
    *minorVer = IFOO_CALLBACK_MINOR_VERSION;
    return HDF_SUCCESS;
}

struct IFooCallback *FooCallbackServiceGet(void)
{
    struct FooCallbackService *service = (struct FooCallbackService *)OsalMemCalloc(sizeof(struct FooCallbackService));
    if (service == NULL) {
        HDF_LOGE("%{public}s: malloc FooCallbackService obj failed!", __func__);
        return NULL;
    }

    service->interface.PushData = FooCallbackPushData;
    service->interface.GetVersion = FooCallbackGetVersion;
    return &service->interface;
}

void FooCallbackServiceRelease(struct IFooCallback *instance)
{
    if (instance == NULL) {
        return;
    }
    OsalMemFree(instance);
}
