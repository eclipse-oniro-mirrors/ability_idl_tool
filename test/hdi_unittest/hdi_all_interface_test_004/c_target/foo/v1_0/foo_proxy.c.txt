/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include <hdf_core_log.h>
#include <hdi_support.h>
#include "v1_0/ifoo.h"

#define HDF_LOG_TAG    foo_proxy

struct IFoo *IFooGet(bool isStub)
{
    return IFooGetInstance("foo_service", isStub);
}

struct IFoo *IFooGetInstance(const char *serviceName, bool isStub)
{
    if (isStub) {
        const char *instName = serviceName;
        if (strcmp(instName, "foo_service") == 0) {
            instName = "service";
        }
        struct IFoo *inst = LoadHdiImpl(IFOO_INTERFACE_DESC, instName);
        if (inst == NULL) {
            HDF_LOGE("%{public}s, failed to load hdi impl %{public}s!", __func__, IFOO_INTERFACE_DESC);
            return NULL;
        }
        if (inst->GetVersion == NULL) {
            HDF_LOGE("%{public}s: GetVersion is not implemented!", __func__);
            IFooRelease(inst, true);
            return NULL;
        }
        uint32_t serMajorVer = 0;
        uint32_t serMinorVer = 0;
        int32_t fooRet = inst->GetVersion(inst, &serMajorVer, &serMinorVer);
        if (fooRet != HDF_SUCCESS) {
            HDF_LOGE("%{public}s: get version failed!", __func__);
            IFooRelease(inst, true);
            return NULL;
        }

        if (serMajorVer != IFOO_MAJOR_VERSION) {
            HDF_LOGE("%{public}s:check version failed! version of service:%u.%u, version of client:%u.%u", __func__,
                serMajorVer, serMinorVer, IFOO_MAJOR_VERSION, IFOO_MINOR_VERSION);
            IFooRelease(inst, true);
            return NULL;
        }

        if (serMinorVer < IFOO_MINOR_VERSION) {
            HDF_LOGE("%{public}s:check version failed! client minor version(%u) should be less "
                "or equal to server minor version(%u).", __func__, IFOO_MINOR_VERSION, serMinorVer);
            IFooRelease(inst, true);
            return NULL;
        }
        return inst;
    }
    return NULL;
}

void IFooRelease(struct IFoo *instance, bool isStub)
{
    IFooReleaseInstance("foo_service", instance, isStub);
}

void IFooReleaseInstance(const char *serviceName, struct IFoo *instance, bool isStub)
{
    if (instance == NULL) {
        return;
    }

    if (isStub) {
        const char *instName = serviceName;
        if (strcmp(instName, "foo_service") == 0) {
            instName = "service";
        }
        UnloadHdiImpl(IFOO_INTERFACE_DESC, instName, instance);
        return;
    }
}
