/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef OHOS_HDI_FOO_V1_0_IFOO_H
#define OHOS_HDI_FOO_V1_0_IFOO_H

#include <stdbool.h>
#include <stdint.h>
#include <hdf_base.h>
#include "foo/v1_0/ifoo_callback.h"
#include "foo/v1_0/types.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#define IFOO_INTERFACE_DESC "ohos.hdi.foo.v1_0.IFoo"

#define IFOO_MAJOR_VERSION 1
#define IFOO_MINOR_VERSION 0

struct IFoo {
    int32_t (*Ping)(struct IFoo *self, const char* sendMsg, char* recvMsg, uint32_t recvMsgLen);

    int32_t (*GetData)(struct IFoo *self, struct FooInfo* info);

    int32_t (*SetCallback)(struct IFoo *self, struct IFooCallback* cbObj);

    int32_t (*TestFunc1)(struct IFoo *self, bool inData, bool* outData);

    int32_t (*TestFunc2)(struct IFoo *self, int8_t inData);

    int32_t (*TestFunc3)(struct IFoo *self, int16_t inData, int16_t* outData);

    int32_t (*TestFunc4)(struct IFoo *self, int32_t inData, int32_t* outData);

    int32_t (*TestFunc5)(struct IFoo *self, int64_t inData, int64_t* outData);

    int32_t (*TestFunc6)(struct IFoo *self, const char* inData);

    int32_t (*TestFunc7)(struct IFoo *self, float inData, float* outData);

    int32_t (*TestFunc8)(struct IFoo *self, double inData, double* outData);

    int32_t (*TestFunc9)(struct IFoo *self, int inData, int* outData);

    int32_t (*GetVersion)(struct IFoo *self, uint32_t* majorVer, uint32_t* minorVer);
};

// external method used to create client object, it support ipc and passthrought mode
struct IFoo *IFooGet(bool isStub);
struct IFoo *IFooGetInstance(const char *serviceName, bool isStub);

// external method used to create release object, it support ipc and passthrought mode
void IFooRelease(struct IFoo *instance, bool isStub);
void IFooReleaseInstance(const char *serviceName, struct IFoo *instance, bool isStub);
#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif // OHOS_HDI_FOO_V1_0_IFOO_H