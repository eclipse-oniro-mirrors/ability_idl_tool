/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef OHOS_HDI_FOO_V1_0_FOOSERVICE_H
#define OHOS_HDI_FOO_V1_0_FOOSERVICE_H

#include "v1_0/ifoo.h"

namespace OHOS {
namespace HDI {
namespace Foo {
namespace V1_0 {
class FooService : public OHOS::HDI::Foo::V1_0::IFoo {
public:
    FooService() = default;
    virtual ~FooService() = default;

    int32_t Ping(const std::string& sendMsg, std::string& recvMsg) override;

    int32_t GetData(OHOS::HDI::Foo::V1_0::FooInfo& info) override;

    int32_t SetCallback(const std::shared_ptr<OHOS::HDI::Foo::V1_0::IFooCallback>& cbObj) override;

    int32_t TestFunc1(bool inData, bool& outData) override;

    int32_t TestFunc2(int8_t inData) override;

    int32_t TestFunc3(int16_t inData, int16_t& outData) override;

    int32_t TestFunc4(int32_t inData, int32_t& outData) override;

    int32_t TestFunc5(int64_t inData, int64_t& outData) override;

    int32_t TestFunc6(const std::string& inData) override;

    int32_t TestFunc7(float inData, float& outData) override;

    int32_t TestFunc8(double inData, double& outData) override;

    int32_t TestFunc9(int inData, int& outData) override;

};
} // V1_0
} // Foo
} // HDI
} // OHOS

#endif // OHOS_HDI_FOO_V1_0_FOOSERVICE_H

