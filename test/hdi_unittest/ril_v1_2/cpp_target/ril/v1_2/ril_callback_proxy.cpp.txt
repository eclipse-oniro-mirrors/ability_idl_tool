/*
 * Copyright (c) 2023-2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "v1_2/ril_callback_proxy.h"
#include <hdf_base.h>
#include <hdf_log.h>
#include <hdi_support.h>
#include <message_option.h>
#include <message_parcel.h>
#include <string_ex.h>

#define HDF_LOG_TAG    ril_callback_proxy

namespace OHOS {
namespace HDI {
namespace Ril {
namespace V1_2 {


template<typename ChildType, typename ParentType>
static sptr<ChildType> CastFromTemplate(const sptr<ParentType> &parent)
{
    if (parent == nullptr) {
        HDF_LOGE("%{public}s:parent is nullptr!", __func__);
        return nullptr;
    }

    if (!parent->IsProxy()) {
        HDF_LOGE("%{public}s:not proxy, not support castfrom!", __func__);
        return nullptr;
    }

    sptr<IRemoteObject> remote = OHOS::HDI::hdi_objcast<ParentType>(parent);
    if (remote == nullptr) {
        HDF_LOGE("%{public}s:hdi_objcast failed!", __func__);
        return nullptr;
    }

    sptr<ChildType> proxy = OHOS::HDI::hdi_facecast<ChildType>(remote);
    if (proxy == nullptr) {
        HDF_LOGE("%{public}s:hdi_facecast failed!", __func__);
        return nullptr;
    }

    uint32_t serMajorVer = 0;
    uint32_t serMinorVer = 0;
    int32_t rilCallbackRet = proxy->GetVersion(serMajorVer, serMinorVer);
    if (rilCallbackRet != HDF_SUCCESS) {
        HDF_LOGE("%{public}s:get version failed!", __func__);
        return nullptr;
    }

    if (serMajorVer != 1) {
        HDF_LOGE("%{public}s:check version failed! version of service:%u.%u, version of client:1.2", __func__, serMajorVer, serMinorVer);
        return nullptr;
    }

    return proxy;
}

sptr<OHOS::HDI::Ril::V1_2::IRilCallback> OHOS::HDI::Ril::V1_2::IRilCallback::CastFrom(const sptr<OHOS::HDI::Ril::V1_1::IRilCallback> &parent)
{
    return CastFromTemplate<OHOS::HDI::Ril::V1_2::IRilCallback, OHOS::HDI::Ril::V1_1::IRilCallback>(parent);
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::ResidentNetworkUpdated(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const std::string& plmn)
{
    return OHOS::HDI::Ril::V1_2::RilCallbackProxy::ResidentNetworkUpdated_(responseInfo, plmn, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SendSimMatchedOperatorInfoResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_2::RilCallbackProxy::SendSimMatchedOperatorInfoResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::CleanAllConnectionsResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_2::RilCallbackProxy::CleanAllConnectionsResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetNrSsbIdResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_2::NrCellSsbIds& nrCellSsbIds)
{
    return OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetNrSsbIdResponse_(responseInfo, nrCellSsbIds, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::NetworkCurrentCellUpdated_1_2(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_2::CellListCurrentInfo_1_2& cellListCurrentInfo)
{
    return OHOS::HDI::Ril::V1_2::RilCallbackProxy::NetworkCurrentCellUpdated_1_2_(responseInfo, cellListCurrentInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetCurrentCellInfoResponse_1_2(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_2::CellListCurrentInfo_1_2& cellListCurrentInfo)
{
    return OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetCurrentCellInfoResponse_1_2_(responseInfo, cellListCurrentInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetNeighboringCellInfoListResponse_1_2(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_2::CellListNearbyInfo_1_2& cellListNearbyInfo)
{
    return OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetNeighboringCellInfoListResponse_1_2_(responseInfo, cellListNearbyInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::CallEmergencyNotice(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::EmergencyInfoList& emergencyInfoList)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::CallEmergencyNotice_(responseInfo, emergencyInfoList, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::CallStateUpdated(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::CallStateUpdated_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::CallRingbackVoiceNotice(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::RingbackVoice& ringbackVoice)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::CallRingbackVoiceNotice_(responseInfo, ringbackVoice, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::CallSrvccStatusNotice(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::SrvccStatus& srvccStatus)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::CallSrvccStatusNotice_(responseInfo, srvccStatus, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::CallUssdNotice(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::UssdNoticeInfo& ussdNoticeInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::CallUssdNotice_(responseInfo, ussdNoticeInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::CallSsNotice(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::SsNoticeInfo& ssNoticeInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::CallSsNotice_(responseInfo, ssNoticeInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::CallRsrvccStatusNotify(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::CallRsrvccStatusNotify_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetEmergencyCallListResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetEmergencyCallListResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetEmergencyCallListResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::EmergencyInfoList& emergencyInfoList)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetEmergencyCallListResponse_(responseInfo, emergencyInfoList, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetCallListResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::CallInfoList& callList)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetCallListResponse_(responseInfo, callList, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::DialResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::DialResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::HangupResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::HangupResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::RejectResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::RejectResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::AnswerResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::AnswerResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::HoldCallResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::HoldCallResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::UnHoldCallResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::UnHoldCallResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SwitchCallResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SwitchCallResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetClipResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::GetClipResult& getClipResult)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetClipResponse_(responseInfo, getClipResult, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetClipResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetClipResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::CombineConferenceResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::CombineConferenceResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SeparateConferenceResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SeparateConferenceResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::CallSupplementResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::CallSupplementResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetCallWaitingResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::CallWaitResult& callWaitResult)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetCallWaitingResponse_(responseInfo, callWaitResult, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetCallWaitingResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetCallWaitingResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetCallTransferInfoResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::CallForwardQueryInfoList& cFQueryList)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetCallTransferInfoResponse_(responseInfo, cFQueryList, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetCallTransferInfoResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetCallTransferInfoResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetCallRestrictionResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::CallRestrictionResult& result)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetCallRestrictionResponse_(responseInfo, result, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetCallRestrictionResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetCallRestrictionResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetClirResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::GetClirResult& getClirResult)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetClirResponse_(responseInfo, getClirResult, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetClirResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetClirResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::StartDtmfResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::StartDtmfResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SendDtmfResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SendDtmfResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::StopDtmfResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::StopDtmfResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetCallPreferenceModeResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, int32_t mode)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetCallPreferenceModeResponse_(responseInfo, mode, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetCallPreferenceModeResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetCallPreferenceModeResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetUssdResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetUssdResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::CloseUnFinishedUssdResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::CloseUnFinishedUssdResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetUssdResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, int32_t cusd)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetUssdResponse_(responseInfo, cusd, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetMuteResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetMuteResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetMuteResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, int32_t mute)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetMuteResponse_(responseInfo, mute, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetCallFailReasonResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, int32_t callFail)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetCallFailReasonResponse_(responseInfo, callFail, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetBarringPasswordResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetBarringPasswordResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetVonrSwitchResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetVonrSwitchResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::PdpContextListUpdated(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::DataCallResultList& dataCallResultList)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::PdpContextListUpdated_(responseInfo, dataCallResultList, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::DataLinkCapabilityUpdated(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::DataLinkCapability& capability)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::DataLinkCapabilityUpdated_(responseInfo, capability, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::ActivatePdpContextResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::SetupDataCallResultInfo& setupDataCallResultInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::ActivatePdpContextResponse_(responseInfo, setupDataCallResultInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::DeactivatePdpContextResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::DeactivatePdpContextResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetPdpContextListResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::DataCallResultList& dataCallResultList)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetPdpContextListResponse_(responseInfo, dataCallResultList, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetInitApnInfoResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetInitApnInfoResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetLinkBandwidthInfoResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::DataLinkBandwidthInfo& dataLinkBandwidthInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetLinkBandwidthInfoResponse_(responseInfo, dataLinkBandwidthInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetLinkCapabilityResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::DataLinkCapability& capability)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetLinkCapabilityResponse_(responseInfo, capability, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetLinkBandwidthReportingRuleResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetLinkBandwidthReportingRuleResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetDataPermittedResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetDataPermittedResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::RadioStateUpdated(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, int32_t state)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::RadioStateUpdated_(responseInfo, state, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::VoiceRadioTechUpdated(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::VoiceRadioTechnology& voiceRadioTechnology)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::VoiceRadioTechUpdated_(responseInfo, voiceRadioTechnology, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::DsdsModeUpdated(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, int32_t state)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::DsdsModeUpdated_(responseInfo, state, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::ShutDownResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::ShutDownResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetRadioStateResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetRadioStateResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetRadioStateResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, int32_t state)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetRadioStateResponse_(responseInfo, state, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetImeiResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const std::string& imei)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetImeiResponse_(responseInfo, imei, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetMeidResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const std::string& meid)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetMeidResponse_(responseInfo, meid, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetVoiceRadioTechnologyResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::VoiceRadioTechnology& voiceRadioTechnology)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetVoiceRadioTechnologyResponse_(responseInfo, voiceRadioTechnology, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetBasebandVersionResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const std::string& basebandVersion)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetBasebandVersionResponse_(responseInfo, basebandVersion, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SimStateUpdated(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SimStateUpdated_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SimStkSessionEndNotify(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SimStkSessionEndNotify_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SimStkProactiveNotify(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const std::string& response)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SimStkProactiveNotify_(responseInfo, response, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SimStkAlphaNotify(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const std::string& response)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SimStkAlphaNotify_(responseInfo, response, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SimStkEventNotify(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const std::string& response)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SimStkEventNotify_(responseInfo, response, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SimStkCallSetupNotify(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SimStkCallSetupNotify_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SimRefreshNotify(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SimRefreshNotify_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SimRadioProtocolUpdated(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::RadioProtocol& radioProtocol)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SimRadioProtocolUpdated_(responseInfo, radioProtocol, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetSimIOResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::IccIoResultInfo& result)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetSimIOResponse_(responseInfo, result, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetSimStatusResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::CardStatusInfo& result)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetSimStatusResponse_(responseInfo, result, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetImsiResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const std::string& response)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetImsiResponse_(responseInfo, response, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetSimLockStatusResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, int32_t simLockStatus)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetSimLockStatusResponse_(responseInfo, simLockStatus, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetSimLockResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::LockStatusResp& lockStatus)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetSimLockResponse_(responseInfo, lockStatus, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::ChangeSimPasswordResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::LockStatusResp& lockStatus)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::ChangeSimPasswordResponse_(responseInfo, lockStatus, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::UnlockPinResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::LockStatusResp& lockStatus)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::UnlockPinResponse_(responseInfo, lockStatus, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::UnlockPukResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::LockStatusResp& lockStatus)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::UnlockPukResponse_(responseInfo, lockStatus, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::UnlockPin2Response(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::LockStatusResp& lockStatus)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::UnlockPin2Response_(responseInfo, lockStatus, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::UnlockPuk2Response(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::LockStatusResp& lockStatus)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::UnlockPuk2Response_(responseInfo, lockStatus, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetActiveSimResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetActiveSimResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SimStkSendTerminalResponseResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SimStkSendTerminalResponseResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SimStkSendEnvelopeResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SimStkSendEnvelopeResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SimStkSendCallSetupRequestResultResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SimStkSendCallSetupRequestResultResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SimStkIsReadyResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SimStkIsReadyResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetRadioProtocolResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::RadioProtocol& radioProtocol)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetRadioProtocolResponse_(responseInfo, radioProtocol, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetRadioProtocolResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::RadioProtocol& radioProtocol)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetRadioProtocolResponse_(responseInfo, radioProtocol, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SimOpenLogicalChannelResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::OpenLogicalChannelResponse& pOpenLogicalChannelResponse)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SimOpenLogicalChannelResponse_(responseInfo, pOpenLogicalChannelResponse, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SimCloseLogicalChannelResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SimCloseLogicalChannelResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SimTransmitApduLogicalChannelResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::IccIoResultInfo& result)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SimTransmitApduLogicalChannelResponse_(responseInfo, result, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SimTransmitApduBasicChannelResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::IccIoResultInfo& result)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SimTransmitApduBasicChannelResponse_(responseInfo, result, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SimAuthenticationResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::IccIoResultInfo& result)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SimAuthenticationResponse_(responseInfo, result, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::UnlockSimLockResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::LockStatusResp& lockStatus)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::UnlockSimLockResponse_(responseInfo, lockStatus, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::NetworkCsRegStatusUpdated(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::CsRegStatusInfo& csRegStatusInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::NetworkCsRegStatusUpdated_(responseInfo, csRegStatusInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::NetworkPsRegStatusUpdated(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::PsRegStatusInfo& psRegStatusInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::NetworkPsRegStatusUpdated_(responseInfo, psRegStatusInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SignalStrengthUpdated(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::Rssi& rssi)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SignalStrengthUpdated_(responseInfo, rssi, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::NetworkTimeZoneUpdated(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const std::string& timeZoneStr)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::NetworkTimeZoneUpdated_(responseInfo, timeZoneStr, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::NetworkTimeUpdated(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const std::string& timeStr)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::NetworkTimeUpdated_(responseInfo, timeStr, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::NetworkPhyChnlCfgUpdated(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::ChannelConfigInfoList& channelConfigInfoList)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::NetworkPhyChnlCfgUpdated_(responseInfo, channelConfigInfoList, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::NetworkCurrentCellUpdated(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::CellListCurrentInfo& cellListCurrentInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::NetworkCurrentCellUpdated_(responseInfo, cellListCurrentInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::NetworkCurrentCellUpdated_1_1(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::CellListCurrentInfo_1_1& cellListCurrentInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::NetworkCurrentCellUpdated_1_1_(responseInfo, cellListCurrentInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetSignalStrengthResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::Rssi& rssi)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetSignalStrengthResponse_(responseInfo, rssi, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetCsRegStatusResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::CsRegStatusInfo& csRegStatusInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetCsRegStatusResponse_(responseInfo, csRegStatusInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetPsRegStatusResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::PsRegStatusInfo& psRegStatusInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetPsRegStatusResponse_(responseInfo, psRegStatusInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetOperatorInfoResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::OperatorInfo& psRegStatusInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetOperatorInfoResponse_(responseInfo, psRegStatusInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetNetworkSearchInformationResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::AvailableNetworkList& availableNetworkList)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetNetworkSearchInformationResponse_(responseInfo, availableNetworkList, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetNetworkSelectionModeResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::SetNetworkModeInfo& setNetworkModeInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetNetworkSelectionModeResponse_(responseInfo, setNetworkModeInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetNetworkSelectionModeResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetNetworkSelectionModeResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetNeighboringCellInfoListResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::CellListNearbyInfo& cellListNearbyInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetNeighboringCellInfoListResponse_(responseInfo, cellListNearbyInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetCurrentCellInfoResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::CellListCurrentInfo& cellListCurrentInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetCurrentCellInfoResponse_(responseInfo, cellListCurrentInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetCurrentCellInfoResponse_1_1(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::CellListCurrentInfo_1_1& cellListCurrentInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetCurrentCellInfoResponse_1_1_(responseInfo, cellListCurrentInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetPreferredNetworkResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetPreferredNetworkResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetPreferredNetworkResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::PreferredNetworkTypeInfo& preferredNetworkTypeInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetPreferredNetworkResponse_(responseInfo, preferredNetworkTypeInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetPhysicalChannelConfigResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::ChannelConfigInfoList& channelConfigInfoList)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetPhysicalChannelConfigResponse_(responseInfo, channelConfigInfoList, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetLocateUpdatesResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetLocateUpdatesResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetNotificationFilterResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetNotificationFilterResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetDeviceStateResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetDeviceStateResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::NewSmsNotify(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::SmsMessageInfo& smsMessageInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::NewSmsNotify_(responseInfo, smsMessageInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::NewCdmaSmsNotify(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::SmsMessageInfo& smsMessageInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::NewCdmaSmsNotify_(responseInfo, smsMessageInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SmsStatusReportNotify(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::SmsMessageInfo& smsMessageInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SmsStatusReportNotify_(responseInfo, smsMessageInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::NewSmsStoredOnSimNotify(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, int32_t recordNumber, int32_t indicationType)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::NewSmsStoredOnSimNotify_(responseInfo, recordNumber, indicationType, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::CBConfigNotify(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::CBConfigReportInfo& cellBroadConfigReportInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::CBConfigNotify_(responseInfo, cellBroadConfigReportInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SendGsmSmsResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::SendSmsResultInfo& sendSmsResultInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SendGsmSmsResponse_(responseInfo, sendSmsResultInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SendCdmaSmsResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::SendSmsResultInfo& sendSmsResultInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SendCdmaSmsResponse_(responseInfo, sendSmsResultInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::AddSimMessageResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::AddSimMessageResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::DelSimMessageResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::DelSimMessageResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::UpdateSimMessageResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::UpdateSimMessageResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::AddCdmaSimMessageResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::AddCdmaSimMessageResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::DelCdmaSimMessageResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::DelCdmaSimMessageResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::UpdateCdmaSimMessageResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::UpdateCdmaSimMessageResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetSmscAddrResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetSmscAddrResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetSmscAddrResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::ServiceCenterAddress& serviceCenterAddress)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetSmscAddrResponse_(responseInfo, serviceCenterAddress, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetCBConfigResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetCBConfigResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetCBConfigResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::CBConfigInfo& cellBroadcastInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetCBConfigResponse_(responseInfo, cellBroadcastInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetCdmaCBConfigResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetCdmaCBConfigResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetCdmaCBConfigResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::CdmaCBConfigInfo& cdmaCBConfigInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetCdmaCBConfigResponse_(responseInfo, cdmaCBConfigInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SendSmsMoreModeResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_1::SendSmsResultInfo& sendSmsResultInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SendSmsMoreModeResponse_(responseInfo, sendSmsResultInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SendSmsAckResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SendSmsAckResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::CommonErrorResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::CommonErrorResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetRrcConnectionStateResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, int32_t state)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetRrcConnectionStateResponse_(responseInfo, state, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SetNrOptionModeResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::SetNrOptionModeResponse_(responseInfo, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetNrOptionModeResponse(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, int32_t mode)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetNrOptionModeResponse_(responseInfo, mode, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetRrcConnectionStateUpdated(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, int32_t state)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetRrcConnectionStateUpdated_(responseInfo, state, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetVersion(uint32_t& majorVer, uint32_t& minorVer)
{
    return OHOS::HDI::Ril::V1_1::RilCallbackProxy::GetVersion_(majorVer, minorVer, Remote());
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::ResidentNetworkUpdated_(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const std::string& plmn, const sptr<IRemoteObject> remote)
{
    MessageParcel rilCallbackData;
    MessageParcel rilCallbackReply;
    MessageOption rilCallbackOption(MessageOption::TF_SYNC);

    if (!rilCallbackData.WriteInterfaceToken(OHOS::HDI::Ril::V1_2::IRilCallback::GetDescriptor())) {
        HDF_LOGE("%{public}s: failed to write interface descriptor!", __func__);
        return HDF_ERR_INVALID_PARAM;
    }

    if (!OHOS::HDI::Ril::V1_1::RilRadioResponseInfoBlockMarshalling(rilCallbackData, responseInfo)) {
        HDF_LOGE("%{public}s: write responseInfo failed!", __func__);
        return HDF_ERR_INVALID_PARAM;
    }

    if (!rilCallbackData.WriteCString(plmn.c_str())) {
        HDF_LOGE("%{public}s: write plmn failed!", __func__);
        return HDF_ERR_INVALID_PARAM;
    }

    if (remote == nullptr) {
        HDF_LOGE("%{public}s: invalid remote object!", __func__);
        return HDF_ERR_INVALID_OBJECT;
    }

    int32_t rilCallbackRet = remote->SendRequest(CMD_RIL_CALLBACK_RESIDENT_NETWORK_UPDATED, rilCallbackData, rilCallbackReply, rilCallbackOption);
    if (rilCallbackRet != HDF_SUCCESS) {
        HDF_LOGE("%{public}s failed, error code is %{public}d", __func__, rilCallbackRet);
        return rilCallbackRet;
    }

    return rilCallbackRet;
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::SendSimMatchedOperatorInfoResponse_(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const sptr<IRemoteObject> remote)
{
    MessageParcel rilCallbackData;
    MessageParcel rilCallbackReply;
    MessageOption rilCallbackOption(MessageOption::TF_SYNC);

    if (!rilCallbackData.WriteInterfaceToken(OHOS::HDI::Ril::V1_2::IRilCallback::GetDescriptor())) {
        HDF_LOGE("%{public}s: failed to write interface descriptor!", __func__);
        return HDF_ERR_INVALID_PARAM;
    }

    if (!OHOS::HDI::Ril::V1_1::RilRadioResponseInfoBlockMarshalling(rilCallbackData, responseInfo)) {
        HDF_LOGE("%{public}s: write responseInfo failed!", __func__);
        return HDF_ERR_INVALID_PARAM;
    }

    if (remote == nullptr) {
        HDF_LOGE("%{public}s: invalid remote object!", __func__);
        return HDF_ERR_INVALID_OBJECT;
    }

    int32_t rilCallbackRet = remote->SendRequest(CMD_RIL_CALLBACK_SEND_SIM_MATCHED_OPERATOR_INFO_RESPONSE, rilCallbackData, rilCallbackReply, rilCallbackOption);
    if (rilCallbackRet != HDF_SUCCESS) {
        HDF_LOGE("%{public}s failed, error code is %{public}d", __func__, rilCallbackRet);
        return rilCallbackRet;
    }

    return rilCallbackRet;
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::CleanAllConnectionsResponse_(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const sptr<IRemoteObject> remote)
{
    MessageParcel rilCallbackData;
    MessageParcel rilCallbackReply;
    MessageOption rilCallbackOption(MessageOption::TF_SYNC);

    if (!rilCallbackData.WriteInterfaceToken(OHOS::HDI::Ril::V1_2::IRilCallback::GetDescriptor())) {
        HDF_LOGE("%{public}s: failed to write interface descriptor!", __func__);
        return HDF_ERR_INVALID_PARAM;
    }

    if (!OHOS::HDI::Ril::V1_1::RilRadioResponseInfoBlockMarshalling(rilCallbackData, responseInfo)) {
        HDF_LOGE("%{public}s: write responseInfo failed!", __func__);
        return HDF_ERR_INVALID_PARAM;
    }

    if (remote == nullptr) {
        HDF_LOGE("%{public}s: invalid remote object!", __func__);
        return HDF_ERR_INVALID_OBJECT;
    }

    int32_t rilCallbackRet = remote->SendRequest(CMD_RIL_CALLBACK_CLEAN_ALL_CONNECTIONS_RESPONSE, rilCallbackData, rilCallbackReply, rilCallbackOption);
    if (rilCallbackRet != HDF_SUCCESS) {
        HDF_LOGE("%{public}s failed, error code is %{public}d", __func__, rilCallbackRet);
        return rilCallbackRet;
    }

    return rilCallbackRet;
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetNrSsbIdResponse_(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_2::NrCellSsbIds& nrCellSsbIds, const sptr<IRemoteObject> remote)
{
    MessageParcel rilCallbackData;
    MessageParcel rilCallbackReply;
    MessageOption rilCallbackOption(MessageOption::TF_SYNC);

    if (!rilCallbackData.WriteInterfaceToken(OHOS::HDI::Ril::V1_2::IRilCallback::GetDescriptor())) {
        HDF_LOGE("%{public}s: failed to write interface descriptor!", __func__);
        return HDF_ERR_INVALID_PARAM;
    }

    if (!OHOS::HDI::Ril::V1_1::RilRadioResponseInfoBlockMarshalling(rilCallbackData, responseInfo)) {
        HDF_LOGE("%{public}s: write responseInfo failed!", __func__);
        return HDF_ERR_INVALID_PARAM;
    }

    if (!OHOS::HDI::Ril::V1_2::NrCellSsbIdsBlockMarshalling(rilCallbackData, nrCellSsbIds)) {
        HDF_LOGE("%{public}s: write nrCellSsbIds failed!", __func__);
        return HDF_ERR_INVALID_PARAM;
    }

    if (remote == nullptr) {
        HDF_LOGE("%{public}s: invalid remote object!", __func__);
        return HDF_ERR_INVALID_OBJECT;
    }

    int32_t rilCallbackRet = remote->SendRequest(CMD_RIL_CALLBACK_GET_NR_SSB_ID_RESPONSE, rilCallbackData, rilCallbackReply, rilCallbackOption);
    if (rilCallbackRet != HDF_SUCCESS) {
        HDF_LOGE("%{public}s failed, error code is %{public}d", __func__, rilCallbackRet);
        return rilCallbackRet;
    }

    return rilCallbackRet;
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::NetworkCurrentCellUpdated_1_2_(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_2::CellListCurrentInfo_1_2& cellListCurrentInfo, const sptr<IRemoteObject> remote)
{
    MessageParcel rilCallbackData;
    MessageParcel rilCallbackReply;
    MessageOption rilCallbackOption(MessageOption::TF_SYNC);

    if (!rilCallbackData.WriteInterfaceToken(OHOS::HDI::Ril::V1_2::IRilCallback::GetDescriptor())) {
        HDF_LOGE("%{public}s: failed to write interface descriptor!", __func__);
        return HDF_ERR_INVALID_PARAM;
    }

    if (!OHOS::HDI::Ril::V1_1::RilRadioResponseInfoBlockMarshalling(rilCallbackData, responseInfo)) {
        HDF_LOGE("%{public}s: write responseInfo failed!", __func__);
        return HDF_ERR_INVALID_PARAM;
    }

    if (!OHOS::HDI::Ril::V1_2::CellListCurrentInfo_1_2BlockMarshalling(rilCallbackData, cellListCurrentInfo)) {
        HDF_LOGE("%{public}s: write cellListCurrentInfo failed!", __func__);
        return HDF_ERR_INVALID_PARAM;
    }

    if (remote == nullptr) {
        HDF_LOGE("%{public}s: invalid remote object!", __func__);
        return HDF_ERR_INVALID_OBJECT;
    }

    int32_t rilCallbackRet = remote->SendRequest(CMD_RIL_CALLBACK_NETWORK_CURRENT_CELL_UPDATED_1_2, rilCallbackData, rilCallbackReply, rilCallbackOption);
    if (rilCallbackRet != HDF_SUCCESS) {
        HDF_LOGE("%{public}s failed, error code is %{public}d", __func__, rilCallbackRet);
        return rilCallbackRet;
    }

    return rilCallbackRet;
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetCurrentCellInfoResponse_1_2_(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_2::CellListCurrentInfo_1_2& cellListCurrentInfo, const sptr<IRemoteObject> remote)
{
    MessageParcel rilCallbackData;
    MessageParcel rilCallbackReply;
    MessageOption rilCallbackOption(MessageOption::TF_SYNC);

    if (!rilCallbackData.WriteInterfaceToken(OHOS::HDI::Ril::V1_2::IRilCallback::GetDescriptor())) {
        HDF_LOGE("%{public}s: failed to write interface descriptor!", __func__);
        return HDF_ERR_INVALID_PARAM;
    }

    if (!OHOS::HDI::Ril::V1_1::RilRadioResponseInfoBlockMarshalling(rilCallbackData, responseInfo)) {
        HDF_LOGE("%{public}s: write responseInfo failed!", __func__);
        return HDF_ERR_INVALID_PARAM;
    }

    if (!OHOS::HDI::Ril::V1_2::CellListCurrentInfo_1_2BlockMarshalling(rilCallbackData, cellListCurrentInfo)) {
        HDF_LOGE("%{public}s: write cellListCurrentInfo failed!", __func__);
        return HDF_ERR_INVALID_PARAM;
    }

    if (remote == nullptr) {
        HDF_LOGE("%{public}s: invalid remote object!", __func__);
        return HDF_ERR_INVALID_OBJECT;
    }

    int32_t rilCallbackRet = remote->SendRequest(CMD_RIL_CALLBACK_GET_CURRENT_CELL_INFO_RESPONSE_1_2, rilCallbackData, rilCallbackReply, rilCallbackOption);
    if (rilCallbackRet != HDF_SUCCESS) {
        HDF_LOGE("%{public}s failed, error code is %{public}d", __func__, rilCallbackRet);
        return rilCallbackRet;
    }

    return rilCallbackRet;
}

int32_t OHOS::HDI::Ril::V1_2::RilCallbackProxy::GetNeighboringCellInfoListResponse_1_2_(const OHOS::HDI::Ril::V1_1::RilRadioResponseInfo& responseInfo, const OHOS::HDI::Ril::V1_2::CellListNearbyInfo_1_2& cellListNearbyInfo, const sptr<IRemoteObject> remote)
{
    MessageParcel rilCallbackData;
    MessageParcel rilCallbackReply;
    MessageOption rilCallbackOption(MessageOption::TF_SYNC);

    if (!rilCallbackData.WriteInterfaceToken(OHOS::HDI::Ril::V1_2::IRilCallback::GetDescriptor())) {
        HDF_LOGE("%{public}s: failed to write interface descriptor!", __func__);
        return HDF_ERR_INVALID_PARAM;
    }

    if (!OHOS::HDI::Ril::V1_1::RilRadioResponseInfoBlockMarshalling(rilCallbackData, responseInfo)) {
        HDF_LOGE("%{public}s: write responseInfo failed!", __func__);
        return HDF_ERR_INVALID_PARAM;
    }

    if (!OHOS::HDI::Ril::V1_2::CellListNearbyInfo_1_2BlockMarshalling(rilCallbackData, cellListNearbyInfo)) {
        HDF_LOGE("%{public}s: write cellListNearbyInfo failed!", __func__);
        return HDF_ERR_INVALID_PARAM;
    }

    if (remote == nullptr) {
        HDF_LOGE("%{public}s: invalid remote object!", __func__);
        return HDF_ERR_INVALID_OBJECT;
    }

    int32_t rilCallbackRet = remote->SendRequest(CMD_RIL_CALLBACK_GET_NEIGHBORING_CELL_INFO_LIST_RESPONSE_1_2, rilCallbackData, rilCallbackReply, rilCallbackOption);
    if (rilCallbackRet != HDF_SUCCESS) {
        HDF_LOGE("%{public}s failed, error code is %{public}d", __func__, rilCallbackRet);
        return rilCallbackRet;
    }

    return rilCallbackRet;
}

} // V1_2
} // Ril
} // HDI
} // OHOS
