/*
 * Copyright (c) 2022 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef OHOS_HDI_USB_V1_0_USBINTERFACESTUB_H
#define OHOS_HDI_USB_V1_0_USBINTERFACESTUB_H

#include <ipc_object_stub.h>
#include <message_option.h>
#include <message_parcel.h>
#include <object_collector.h>
#include <refbase.h>
#include "v1_0/iusb_interface.h"

namespace OHOS {
namespace HDI {
namespace Usb {
namespace V1_0 {

using namespace OHOS;
class UsbInterfaceStub : public IPCObjectStub {
public:
    explicit UsbInterfaceStub(const sptr<IUsbInterface> &impl);
    virtual ~UsbInterfaceStub();

    int32_t OnRemoteRequest(uint32_t code, MessageParcel &data, MessageParcel &reply, MessageOption &option) override;

    static int32_t UsbInterfaceStubOpenDevice_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubCloseDevice_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubGetDeviceDescriptor_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubGetStringDescriptor_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubGetConfigDescriptor_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubGetRawDescriptor_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubGetFileDescriptor_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubSetConfig_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubGetConfig_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubClaimInterface_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubManageInterface_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubReleaseInterface_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubSetInterface_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubBulkTransferRead_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubBulkTransferWrite_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubControlTransferRead_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubControlTransferWrite_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubInterruptTransferRead_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubInterruptTransferWrite_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubIsoTransferRead_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubIsoTransferWrite_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubRequestQueue_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubRequestWait_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubRequestCancel_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubGetCurrentFunctions_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubSetCurrentFunctions_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubSetPortRole_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubQueryPort_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubBindUsbdSubscriber_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubUnbindUsbdSubscriber_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubRegBulkCallback_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubUnRegBulkCallback_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubBulkRead_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubBulkWrite_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubBulkCancel_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

    static int32_t UsbInterfaceStubGetVersion_(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption, sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl);

private:
    int32_t UsbInterfaceStubOpenDevice(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubCloseDevice(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubGetDeviceDescriptor(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubGetStringDescriptor(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubGetConfigDescriptor(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubGetRawDescriptor(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubGetFileDescriptor(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubSetConfig(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubGetConfig(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubClaimInterface(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubManageInterface(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubReleaseInterface(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubSetInterface(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubBulkTransferRead(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubBulkTransferWrite(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubControlTransferRead(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubControlTransferWrite(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubInterruptTransferRead(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubInterruptTransferWrite(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubIsoTransferRead(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubIsoTransferWrite(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubRequestQueue(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubRequestWait(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubRequestCancel(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubGetCurrentFunctions(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubSetCurrentFunctions(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubSetPortRole(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubQueryPort(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubBindUsbdSubscriber(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubUnbindUsbdSubscriber(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubRegBulkCallback(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubUnRegBulkCallback(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubBulkRead(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubBulkWrite(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubBulkCancel(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);

    int32_t UsbInterfaceStubGetVersion(MessageParcel& usbInterfaceData, MessageParcel& usbInterfaceReply, MessageOption& usbInterfaceOption);


    static inline ObjectDelegator<OHOS::HDI::Usb::V1_0::UsbInterfaceStub, OHOS::HDI::Usb::V1_0::IUsbInterface> objDelegator_;
    sptr<OHOS::HDI::Usb::V1_0::IUsbInterface> impl_;
};
} // V1_0
} // Usb
} // HDI
} // OHOS

#endif // OHOS_HDI_USB_V1_0_USBINTERFACESTUB_H

