/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "v1_0/effect_control_service.h"
#include <hdf_base.h>
#include <hdf_core_log.h>
#include <osal_mem.h>
#include <securec.h>

#define HDF_LOG_TAG    effect_control_service

static int32_t EffectControlEffectProcess(struct IEffectControl *self, const struct AudioEffectBuffer* input,
     struct AudioEffectBuffer* output)
{
    return HDF_SUCCESS;
}

static int32_t EffectControlSendCommand(struct IEffectControl *self, uint32_t cmdId, const int8_t* cmdData,
     uint32_t cmdDataLen, int8_t* replyData, uint32_t* replyDataLen)
{
    return HDF_SUCCESS;
}

static int32_t EffectControlGetEffectDescriptor(struct IEffectControl *self, struct EffectControllerDescriptor* desc)
{
    return HDF_SUCCESS;
}

static int32_t EffectControlEffectReverse(struct IEffectControl *self, const struct AudioEffectBuffer* input,
     struct AudioEffectBuffer* output)
{
    return HDF_SUCCESS;
}

static int32_t EffectControlGetVersion(struct IEffectControl *self, uint32_t* majorVer, uint32_t* minorVer)
{
    *majorVer = IEFFECT_CONTROL_MAJOR_VERSION;
    *minorVer = IEFFECT_CONTROL_MINOR_VERSION;
    return HDF_SUCCESS;
}

struct IEffectControl *EffectControlServiceGet(void)
{
    struct EffectControlService *service = (struct EffectControlService *)OsalMemCalloc(sizeof(struct EffectControlService));
    if (service == NULL) {
        HDF_LOGE("%{public}s: malloc EffectControlService obj failed!", __func__);
        return NULL;
    }

    service->interface.EffectProcess = EffectControlEffectProcess;
    service->interface.SendCommand = EffectControlSendCommand;
    service->interface.GetEffectDescriptor = EffectControlGetEffectDescriptor;
    service->interface.EffectReverse = EffectControlEffectReverse;
    service->interface.GetVersion = EffectControlGetVersion;
    return &service->interface;
}

void EffectControlServiceRelease(struct IEffectControl *instance)
{
    if (instance == NULL) {
        return;
    }
    OsalMemFree(instance);
}
