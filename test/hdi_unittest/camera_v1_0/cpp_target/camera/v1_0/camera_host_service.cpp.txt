/*
 * Copyright (c) 2022 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "v1_0/camera_host_service.h"
#include <hdf_base.h>

#define HDF_LOG_TAG    camera_host_service

namespace OHOS {
namespace HDI {
namespace Camera {
namespace V1_0 {
extern "C" ICameraHost *CameraHostImplGetInstance(void)
{
    return new (std::nothrow) CameraHostService();
}

int32_t CameraHostService::SetCallback(const sptr<OHOS::HDI::Camera::V1_0::ICameraHostCallback>& callbackObj)
{
    return HDF_SUCCESS;
}

int32_t CameraHostService::GetCameraIds(std::vector<std::string>& cameraIds)
{
    return HDF_SUCCESS;
}

int32_t CameraHostService::GetCameraAbility(const std::string& cameraId, std::vector<uint8_t>& cameraAbility)
{
    return HDF_SUCCESS;
}

int32_t CameraHostService::OpenCamera(const std::string& cameraId,
     const sptr<OHOS::HDI::Camera::V1_0::ICameraDeviceCallback>& callbackObj, sptr<OHOS::HDI::Camera::V1_0::ICameraDevice>& device)
{
    return HDF_SUCCESS;
}

int32_t CameraHostService::SetFlashlight(const std::string& cameraId, bool isEnable)
{
    return HDF_SUCCESS;
}

} // V1_0
} // Camera
} // HDI
} // OHOS
