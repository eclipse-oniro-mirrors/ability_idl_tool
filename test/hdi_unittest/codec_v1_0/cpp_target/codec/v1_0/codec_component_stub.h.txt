/*
 * Copyright (c) 2022 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef OHOS_HDI_CODEC_V1_0_CODECCOMPONENTSTUB_H
#define OHOS_HDI_CODEC_V1_0_CODECCOMPONENTSTUB_H

#include <ipc_object_stub.h>
#include <message_option.h>
#include <message_parcel.h>
#include <object_collector.h>
#include <refbase.h>
#include "v1_0/icodec_component.h"

namespace OHOS {
namespace HDI {
namespace Codec {
namespace V1_0 {

using namespace OHOS;
class CodecComponentStub : public IPCObjectStub {
public:
    explicit CodecComponentStub(const sptr<ICodecComponent> &impl);
    virtual ~CodecComponentStub();

    int32_t OnRemoteRequest(uint32_t code, MessageParcel &data, MessageParcel &reply, MessageOption &option) override;

    static int32_t CodecComponentStubGetComponentVersion_(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption, sptr<OHOS::HDI::Codec::V1_0::ICodecComponent> impl);

    static int32_t CodecComponentStubSendCommand_(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption, sptr<OHOS::HDI::Codec::V1_0::ICodecComponent> impl);

    static int32_t CodecComponentStubGetParameter_(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption, sptr<OHOS::HDI::Codec::V1_0::ICodecComponent> impl);

    static int32_t CodecComponentStubSetParameter_(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption, sptr<OHOS::HDI::Codec::V1_0::ICodecComponent> impl);

    static int32_t CodecComponentStubGetConfig_(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption, sptr<OHOS::HDI::Codec::V1_0::ICodecComponent> impl);

    static int32_t CodecComponentStubSetConfig_(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption, sptr<OHOS::HDI::Codec::V1_0::ICodecComponent> impl);

    static int32_t CodecComponentStubGetExtensionIndex_(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption, sptr<OHOS::HDI::Codec::V1_0::ICodecComponent> impl);

    static int32_t CodecComponentStubGetState_(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption, sptr<OHOS::HDI::Codec::V1_0::ICodecComponent> impl);

    static int32_t CodecComponentStubComponentTunnelRequest_(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption, sptr<OHOS::HDI::Codec::V1_0::ICodecComponent> impl);

    static int32_t CodecComponentStubUseBuffer_(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption, sptr<OHOS::HDI::Codec::V1_0::ICodecComponent> impl);

    static int32_t CodecComponentStubAllocateBuffer_(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption, sptr<OHOS::HDI::Codec::V1_0::ICodecComponent> impl);

    static int32_t CodecComponentStubFreeBuffer_(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption, sptr<OHOS::HDI::Codec::V1_0::ICodecComponent> impl);

    static int32_t CodecComponentStubEmptyThisBuffer_(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption, sptr<OHOS::HDI::Codec::V1_0::ICodecComponent> impl);

    static int32_t CodecComponentStubFillThisBuffer_(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption, sptr<OHOS::HDI::Codec::V1_0::ICodecComponent> impl);

    static int32_t CodecComponentStubSetCallbacks_(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption, sptr<OHOS::HDI::Codec::V1_0::ICodecComponent> impl);

    static int32_t CodecComponentStubComponentDeInit_(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption, sptr<OHOS::HDI::Codec::V1_0::ICodecComponent> impl);

    static int32_t CodecComponentStubUseEglImage_(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption, sptr<OHOS::HDI::Codec::V1_0::ICodecComponent> impl);

    static int32_t CodecComponentStubComponentRoleEnum_(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption, sptr<OHOS::HDI::Codec::V1_0::ICodecComponent> impl);

    static int32_t CodecComponentStubGetVersion_(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption, sptr<OHOS::HDI::Codec::V1_0::ICodecComponent> impl);

private:
    int32_t CodecComponentStubGetComponentVersion(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption);

    int32_t CodecComponentStubSendCommand(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption);

    int32_t CodecComponentStubGetParameter(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption);

    int32_t CodecComponentStubSetParameter(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption);

    int32_t CodecComponentStubGetConfig(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption);

    int32_t CodecComponentStubSetConfig(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption);

    int32_t CodecComponentStubGetExtensionIndex(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption);

    int32_t CodecComponentStubGetState(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption);

    int32_t CodecComponentStubComponentTunnelRequest(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption);

    int32_t CodecComponentStubUseBuffer(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption);

    int32_t CodecComponentStubAllocateBuffer(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption);

    int32_t CodecComponentStubFreeBuffer(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption);

    int32_t CodecComponentStubEmptyThisBuffer(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption);

    int32_t CodecComponentStubFillThisBuffer(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption);

    int32_t CodecComponentStubSetCallbacks(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption);

    int32_t CodecComponentStubComponentDeInit(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption);

    int32_t CodecComponentStubUseEglImage(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption);

    int32_t CodecComponentStubComponentRoleEnum(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption);

    int32_t CodecComponentStubGetVersion(MessageParcel& codecComponentData, MessageParcel& codecComponentReply, MessageOption& codecComponentOption);


    static inline ObjectDelegator<OHOS::HDI::Codec::V1_0::CodecComponentStub, OHOS::HDI::Codec::V1_0::ICodecComponent> objDelegator_;
    sptr<OHOS::HDI::Codec::V1_0::ICodecComponent> impl_;
};
} // V1_0
} // Codec
} // HDI
} // OHOS

#endif // OHOS_HDI_CODEC_V1_0_CODECCOMPONENTSTUB_H

