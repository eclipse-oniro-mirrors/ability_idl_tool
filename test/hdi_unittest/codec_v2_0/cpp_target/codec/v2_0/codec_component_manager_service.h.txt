/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef OHOS_HDI_CODEC_V2_0_CODECCOMPONENTMANAGERSERVICE_H
#define OHOS_HDI_CODEC_V2_0_CODECCOMPONENTMANAGERSERVICE_H

#include "v2_0/icodec_component_manager.h"

namespace OHOS {
namespace HDI {
namespace Codec {
namespace V2_0 {
class CodecComponentManagerService : public OHOS::HDI::Codec::V2_0::ICodecComponentManager {
public:
    CodecComponentManagerService() = default;
    virtual ~CodecComponentManagerService() = default;

    int32_t GetComponentNum(int32_t& count) override;

    int32_t GetComponentCapabilityList(std::vector<OHOS::HDI::Codec::V2_0::CodecCompCapability>& capList,
         int32_t count) override;

    int32_t CreateComponent(sptr<OHOS::HDI::Codec::V2_0::ICodecComponent>& component, uint32_t& componentId,
         const std::string& compName, int64_t appData, const sptr<OHOS::HDI::Codec::V2_0::ICodecCallback>& callbacks) override;

    int32_t DestroyComponent(uint32_t componentId) override;

};
} // V2_0
} // Codec
} // HDI
} // OHOS

#endif // OHOS_HDI_CODEC_V2_0_CODECCOMPONENTMANAGERSERVICE_H

