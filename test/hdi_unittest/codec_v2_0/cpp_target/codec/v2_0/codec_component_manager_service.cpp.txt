/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "v2_0/codec_component_manager_service.h"
#include <hdf_base.h>

#define HDF_LOG_TAG    codec_component_manager_service

namespace OHOS {
namespace HDI {
namespace Codec {
namespace V2_0 {
extern "C" ICodecComponentManager *CodecComponentManagerImplGetInstance(void)
{
    return new (std::nothrow) CodecComponentManagerService();
}

int32_t CodecComponentManagerService::GetComponentNum(int32_t& count)
{
    return HDF_SUCCESS;
}

int32_t CodecComponentManagerService::GetComponentCapabilityList(std::vector<OHOS::HDI::Codec::V2_0::CodecCompCapability>& capList, int32_t count)
{
    return HDF_SUCCESS;
}

int32_t CodecComponentManagerService::CreateComponent(sptr<OHOS::HDI::Codec::V2_0::ICodecComponent>& component,
     uint32_t& componentId, const std::string& compName, int64_t appData, const sptr<OHOS::HDI::Codec::V2_0::ICodecCallback>& callbacks)
{
    return HDF_SUCCESS;
}

int32_t CodecComponentManagerService::DestroyComponent(uint32_t componentId)
{
    return HDF_SUCCESS;
}

} // V2_0
} // Codec
} // HDI
} // OHOS
