/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef OHOS_HDI_FOO_V1_0_IFOOEXT_H
#define OHOS_HDI_FOO_V1_0_IFOOEXT_H

#include <stdbool.h>
#include <stdint.h>
#include <base/buffer_util.h>
#include <hdf_base.h>
#include "foo/v1_0/ifoo_callback.h"
#include "foo/v1_0/types.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#define IFOOEXT_INTERFACE_DESC "ohos.hdi.foo.v1_0.IFooExt"

#define IFOO_EXT_MAJOR_VERSION 1
#define IFOO_EXT_MINOR_VERSION 0

struct IFooExt {
    int32_t (*TestFunc11)(struct IFooExt *self, const BufferHandle* inData, BufferHandle** outData);

    int32_t (*TestFunc13)(struct IFooExt *self, unknow type inData, unknow type outData);

    int32_t (*TestFunc15)(struct IFooExt *self, uint8_t inData, uint8_t outData);

    int32_t (*TestFunc16)(struct IFooExt *self, uint32_t inData, uint8_t outData);

    int32_t (*TestFunc17)(struct IFooExt *self, uint16_t inData, uint32_t* outData);

    int32_t (*TestFunc18)(struct IFooExt *self, uint64_t inData, uint64_t* outData);

    int32_t (*TestFunc19)(struct IFooExt *self, const struct FooInfo* inData, enum AudioPortPin* outData);

    int32_t (*TestFunc20)(struct IFooExt *self, const struct AudioSceneDescriptor* inData, union SceneDesc* outData);

    int32_t (*GetVersion)(struct IFooExt *self, uint32_t* majorVer, uint32_t* minorVer);
};

// external method used to create client object, it support ipc and passthrought mode
struct IFooExt *IFooExtGet(bool isStub);
struct IFooExt *IFooExtGetInstance(const char *serviceName, bool isStub);

// external method used to create release object, it support ipc and passthrought mode
void IFooExtRelease(struct IFooExt *instance, bool isStub);
void IFooExtReleaseInstance(const char *serviceName, struct IFooExt *instance, bool isStub);
#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif // OHOS_HDI_FOO_V1_0_IFOOEXT_H