AST[name: ILightInterface file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/light_v1_0/foo/light/v1_0/ILightInterface.idl]
package ohos.hdi.light.v1_0;

import ohos.hdi.light.v1_0.LightTypes;

[mini, lite, full] interface ILightInterface {
    [mini, lite, full] GetLightInfo(
      [out] ohos.hdi.light.v1_0.HdfLightInfo[] info);

    [mini, lite, full] TurnOnLight(
      [in] int lightId,
      [in] ohos.hdi.light.v1_0.HdfLightEffect effect);

    [mini, lite, full] TurnOnMultiLights(
      [in] int lightId,
      [in] ohos.hdi.light.v1_0.HdfLightColor[] colors);

    [mini, lite, full] TurnOffLight(
      [in] int lightId);
}


AST[name: LightTypes file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/light_v1_0/foo/light/v1_0/LightTypes.idl]
package ohos.hdi.light.v1_0;

[mini, lite, full] enum HdfLightId : int {
  HDF_LIGHT_ID_BATTERY = 1,
  HDF_LIGHT_ID_NOTIFICATIONS = 2,
  HDF_LIGHT_ID_ATTENTION = 3,
  HDF_LIGHT_ID_BUTT = 4,
};

[mini, lite, full] enum HdfLightType : int {
  HDF_LIGHT_TYPE_SINGLE_COLOR = 1,
  HDF_LIGHT_TYPE_RGB_COLOR = 2,
  HDF_LIGHT_TYPE_WRGB_COLOR = 3,
};

[mini, lite, full] struct HdfLightInfo {
  std::string lightName;
  int lightId;
  int lightNumber;
  int lightType;
};

[mini, lite, full] enum HdfLightFlashMode : int {
  HDF_LIGHT_FLASH_NONE = 0,
  HDF_LIGHT_FLASH_BLINK = 1,
  HDF_LIGHT_FLASH_GRADIENT = 2,
  HDF_LIGHT_FLASH_BUTT = 3,
};

[mini, lite, full] struct HdfLightFlashEffect {
  int flashMode;
  int onTime;
  int offTime;
};

[mini, lite, full] struct RGBColor {
  unsigned char r;
  unsigned char g;
  unsigned char b;
  unsigned char reserved;
};

[mini, lite, full] struct WRGBColor {
  unsigned char w;
  unsigned char r;
  unsigned char g;
  unsigned char b;
};

[mini, lite, full] union ColorValue {
  int singleColor;
  ohos.hdi.light.v1_0.WRGBColor wrgbColor;
  ohos.hdi.light.v1_0.RGBColor rgbColor;
};

[mini, lite, full] struct HdfLightColor {
  ohos.hdi.light.v1_0.ColorValue colorValue;
};

[mini, lite, full] struct HdfLightEffect {
  ohos.hdi.light.v1_0.HdfLightColor lightColor;
  ohos.hdi.light.v1_0.HdfLightFlashEffect flashEffect;
};


