/*
 * Copyright (c) 2022 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef OHOS_HDI_DISTRIBUTED_CAMERA_V1_0_DCAMERAPROVIDERSERVICE_H
#define OHOS_HDI_DISTRIBUTED_CAMERA_V1_0_DCAMERAPROVIDERSERVICE_H

#include "v1_0/id_camera_provider.h"

namespace OHOS {
namespace HDI {
namespace DistributedCamera {
namespace V1_0 {
class DCameraProviderService : public OHOS::HDI::DistributedCamera::V1_0::IDCameraProvider {
public:
    DCameraProviderService() = default;
    virtual ~DCameraProviderService() = default;

    int32_t EnableDCameraDevice(const OHOS::HDI::DistributedCamera::V1_0::DHBase& dhBase,
         const std::string& abilityInfo, const sptr<OHOS::HDI::DistributedCamera::V1_0::IDCameraProviderCallback>& callbackObj) override;

    int32_t DisableDCameraDevice(const OHOS::HDI::DistributedCamera::V1_0::DHBase& dhBase) override;

    int32_t AcquireBuffer(const OHOS::HDI::DistributedCamera::V1_0::DHBase& dhBase, int32_t streamId,
         OHOS::HDI::DistributedCamera::V1_0::DCameraBuffer& buffer) override;

    int32_t ShutterBuffer(const OHOS::HDI::DistributedCamera::V1_0::DHBase& dhBase, int32_t streamId,
         const OHOS::HDI::DistributedCamera::V1_0::DCameraBuffer& buffer) override;

    int32_t OnSettingsResult(const OHOS::HDI::DistributedCamera::V1_0::DHBase& dhBase,
         const OHOS::HDI::DistributedCamera::V1_0::DCameraSettings& result) override;

    int32_t Notify(const OHOS::HDI::DistributedCamera::V1_0::DHBase& dhBase,
         const OHOS::HDI::DistributedCamera::V1_0::DCameraHDFEvent& event) override;

};
} // V1_0
} // DistributedCamera
} // HDI
} // OHOS

#endif // OHOS_HDI_DISTRIBUTED_CAMERA_V1_0_DCAMERAPROVIDERSERVICE_H

