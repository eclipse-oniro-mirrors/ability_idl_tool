/*
 * Copyright (c) 2022 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "v1_0/bluetooth_audio_session_service.h"
#include <hdf_base.h>

#define HDF_LOG_TAG    bluetooth_audio_session_service

namespace OHOS {
namespace HDI {
namespace Bluetooth {
namespace A2dp {
namespace V1_0 {
extern "C" IBluetoothAudioSession *BluetoothAudioSessionImplGetInstance(void)
{
    return new (std::nothrow) BluetoothAudioSessionService();
}

int32_t BluetoothAudioSessionService::StartSession(OHOS::HDI::Bluetooth::A2dp::V1_0::SessionType sessionType,
     const sptr<OHOS::HDI::Bluetooth::A2dp::V1_0::IBluetoothAudioCallback>& callbackObj, std::shared_ptr<SharedMemQueue<uint8_t>>& queue)
{
    return HDF_SUCCESS;
}

int32_t BluetoothAudioSessionService::StopSession(OHOS::HDI::Bluetooth::A2dp::V1_0::SessionType sessionType)
{
    return HDF_SUCCESS;
}

int32_t BluetoothAudioSessionService::RenderOperationResult(OHOS::HDI::Bluetooth::A2dp::V1_0::Operation operation,
     OHOS::HDI::Bluetooth::A2dp::V1_0::Status status)
{
    return HDF_SUCCESS;
}

} // V1_0
} // A2dp
} // Bluetooth
} // HDI
} // OHOS
