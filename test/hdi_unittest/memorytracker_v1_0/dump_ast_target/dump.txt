AST[name: IMemoryTrackerInterface file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/memorytracker_v1_0/foo/memorytracker/v1_0/IMemoryTrackerInterface.idl]
package ohos.hdi.memorytracker.v1_0;

import ohos.hdi.memorytracker.v1_0.MemoryTrackerTypes;

[mini, lite, full] interface IMemoryTrackerInterface {
    [mini, lite, full] GetDevMem(
      [in] int pid,
      [in] ohos.hdi.memorytracker.v1_0.MemoryTrackerType type,
      [out] ohos.hdi.memorytracker.v1_0.MemoryRecord[] records);
}


AST[name: MemoryTrackerTypes file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/memorytracker_v1_0/foo/memorytracker/v1_0/MemoryTrackerTypes.idl]
package ohos.hdi.memorytracker.v1_0;

[mini, lite, full] enum MemoryTrackerType : int {
  MEMORY_TRACKER_TYPE_MM = 0,
  MEMORY_TRACKER_TYPE_GL = 1,
  MEMORY_TRACKER_TYPE_CAM = 2,
  MEMORY_TRACKER_TYPE_GRAPH = 3,
  MEMORY_TRACKER_TYPE_OTHER = 4,
  MEMORY_TRACKER_TYPE_COUNTS,
};

[mini, lite, full] enum MemoryTrackerFlag : int {
  FLAG_SHARED_RSS = 2,
  FLAG_SHARED_PSS = 4,
  FLAG_PRIVATE = 8,
  FLAG_MAPPED = 16,
  FLAG_UNMAPPED = 32,
  FLAG_PROTECTED = 64,
  FLAG_UNPROTECTED = 128,
  FLAG_SYSTEM = 256,
  FLAG_SYSTEM_EXCEPT = 512,
};

[mini, lite, full] struct MemoryRecord {
  int flags;
  long size;
};


