AST[name: IMotionInterface file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/motion_v1_1/foo/motion/v1_0/IMotionInterface.idl]
package ohos.hdi.motion.v1_0;

import ohos.hdi.motion.v1_0.IMotionCallback;
import ohos.hdi.motion.v1_0.MotionTypes;

[mini, lite, full] interface IMotionInterface {
    [mini, lite, full] EnableMotion(
      [in] int motionType);

    [mini, lite, full] DisableMotion(
      [in] int motionType);

    [mini, lite, full] Register(
      [in] ohos.hdi.motion.v1_0.IMotionCallback callbackObj);

    [mini, lite, full] Unregister(
      [in] ohos.hdi.motion.v1_0.IMotionCallback callbackObj);
}


AST[name: IMotionCallback file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/motion_v1_1/foo/motion/v1_0/IMotionCallback.idl]
package ohos.hdi.motion.v1_0;

import ohos.hdi.motion.v1_0.MotionTypes;

[mini, lite, full, callback] interface IMotionCallback {
    [mini, lite, full, callback] OnDataEvent(
      [in] ohos.hdi.motion.v1_0.HdfMotionEvent event);
}


AST[name: MotionTypes file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/motion_v1_1/foo/motion/v1_1/MotionTypes.idl]
package ohos.hdi.motion.v1_1;

[mini, lite, full] struct WaveParam {
  int waveFrequency;
  int waveAmplitude;
  boolean isUseGyroscope;
};

[mini, lite, full] enum HdfMotionTypeTag : int {
  HDF_MOTION_TYPE_PICKUP = 0,
  HDF_MOTION_TYPE_FLIP,
  HDF_MOTION_CLOSE_TO_EAR,
  HDF_MOTION_TYPE_SHAKE,
  HDF_MOTION_TYPE_ROTATION,
  HDF_MOTION_TYPE_POCKET_MODE,
  HDF_MOTION_TYPE_LEAVE_EAR,
  HDF_MOTION_TYPE_WRIST_UP,
  HDF_MOTION_TYPE_WRIST_DOWN,
  HDF_MOTION_TYPE_WAVE,
  HDF_MOTION_TYPE_STEP_COUNTER,
  HDF_MOTION_TYPE_TOUCH_LINK,
  HDF_MOTION_TYPE_RESERVED,
  HDF_MOTION_TYPE_MAX,
};


AST[name: IMotionInterface file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/motion_v1_1/foo/motion/v1_1/IMotionInterface.idl]
package ohos.hdi.motion.v1_1;

import ohos.hdi.motion.v1_1.MotionTypes;
import ohos.hdi.motion.v1_0.IMotionInterface;
import ohos.hdi.motion.v1_0.IMotionCallback;

[mini, lite, full] interface IMotionInterface {
    [mini, lite, full] SetMotionConfig(
      [in] int motionType,
      [in] unsigned char[] data);
}


AST[name: MotionTypes file: /home/bmi/CODE/OpenHarmony/foundation/ability/idl_tool/test/hdi_unittest/motion_v1_1/foo/motion/v1_0/MotionTypes.idl]
package ohos.hdi.motion.v1_0;

[mini, lite, full] enum HdfMotionTypeTag : int {
  HDF_MOTION_TYPE_PICKUP = 0,
  HDF_MOTION_TYPE_FLIP,
  HDF_MOTION_CLOSE_TO_EAR,
  HDF_MOTION_TYPE_SHAKE,
  HDF_MOTION_TYPE_ROTATION,
  HDF_MOTION_TYPE_POCKET_MODE,
  HDF_MOTION_TYPE_LEAVE_EAR,
  HDF_MOTION_TYPE_WRIST_UP,
  HDF_MOTION_TYPE_WRIST_DOWN,
  HDF_MOTION_TYPE_WAVE,
  HDF_MOTION_TYPE_STEP_COUNTER,
  HDF_MOTION_TYPE_MAX,
};

[mini, lite, full] struct HdfMotionEvent {
  int motion;
  int result;
  int status;
  int datalen;
  int[] data;
};


