/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef OHOS_TESTSERVER_ITESTSERVERINTERFACE_H
#define OHOS_TESTSERVER_ITESTSERVERINTERFACE_H

#include <cstdint>
#include <iremote_broker.h>
#include <string_ex.h>
#include "common_event_data.h"
#include "session_token.h"

using OHOS::testserver::SessionToken;
using OHOS::EventFwk::CommonEventData;

namespace OHOS {
namespace testserver {

enum class ITestServerInterfaceIpcCode {
    COMMAND_CREATE_SESSION = MIN_TRANSACTION_ID,
    COMMAND_SET_PASTE_DATA,
    COMMAND_PUBLISH_COMMON_EVENT,
};

using OnRemoteDiedCallback = std::function<void(const wptr<IRemoteObject>&)>;

class ITestServerInterface : public IRemoteBroker {
public:
    DECLARE_INTERFACE_DESCRIPTOR(u"OHOS.testserver.ITestServerInterface");

    virtual void RegisterOnRemoteDiedCallback([[maybe_unused]] const OnRemoteDiedCallback& callback) {}

    virtual ErrCode CreateSession(
        const SessionToken& sessionToken) = 0;

    virtual ErrCode SetPasteData(
        const std::string& text) = 0;

    virtual ErrCode PublishCommonEvent(
        const CommonEventData& event,
        bool& re) = 0;
protected:
    const int VECTOR_MAX_SIZE = 102400;
    const int LIST_MAX_SIZE = 102400;
    const int MAP_MAX_SIZE = 102400;
};
} // namespace testserver
} // namespace OHOS
#endif // OHOS_TESTSERVER_ITESTSERVERINTERFACE_H

