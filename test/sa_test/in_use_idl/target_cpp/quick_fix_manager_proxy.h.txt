/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef OHOS_AAFWK_QUICKFIXMANAGERPROXY_H
#define OHOS_AAFWK_QUICKFIXMANAGERPROXY_H

#include "iquick_fix_manager.h"
#include <iremote_proxy.h>

namespace OHOS {
namespace AAFwk {
class QuickFixManagerProxy : public IRemoteProxy<IQuickFixManager> {
public:
    explicit QuickFixManagerProxy(
        const sptr<IRemoteObject>& remote)
        : IRemoteProxy<IQuickFixManager>(remote)
    {}

    virtual ~QuickFixManagerProxy()
    {}

    ErrCode ApplyQuickFix(
        const std::vector<std::string>& quickFixFiles,
        bool isDebug) override;

    ErrCode GetApplyedQuickFixInfo(
        const std::string& bundleName,
        ApplicationQuickFixInfo& quickFixInfo) override;

    ErrCode RevokeQuickFix(
        const std::string& bundleName) override;

private:
    static inline BrokerDelegator<QuickFixManagerProxy> delegator_;
};
} // namespace AAFwk
} // namespace OHOS
#endif // OHOS_AAFWK_QUICKFIXMANAGERPROXY_H

