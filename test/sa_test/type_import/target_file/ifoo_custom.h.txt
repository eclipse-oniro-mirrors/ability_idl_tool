/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef OHOS_CUSTOM_IDLFILE_IFOOCUSTOM_H
#define OHOS_CUSTOM_IDLFILE_IFOOCUSTOM_H

#include <cstdbool>
#include <cstdint>
#include <unordered_map>
#include <vector>
#include <iremote_proxy.h>
#include <message_parcel.h>
#include <string_ex.h>

namespace OHOS {
namespace custom {
namespace idlFile {

enum class FooEnum : int32_t {
    ENUM_ONE = 1,
    ENUM_TWO = 2,
    ENUM_NESTING = (ENUM_ONE << ENUM_TWO),
};

struct FooStruct {
    int32_t id;
    std::string name;
    FooEnum type;
    sptr<IRemoteObject> caption;
};

union FooUnion {
    FooEnum enumType;
    int32_t unionInfo;
} __attribute__ ((aligned(8)));

struct RequestInfo {
    std::vector<uint8_t> initData;
    std::unordered_map<std::string, std::string> optionalData;
};

ErrCode FooStructBlockMarshalling(OHOS::MessageParcel &data, const FooStruct& dataBlock);

ErrCode FooStructBlockUnmarshalling(OHOS::MessageParcel &data, FooStruct& dataBlock);

ErrCode RequestInfoBlockMarshalling(OHOS::MessageParcel &data, const RequestInfo& dataBlock);

ErrCode RequestInfoBlockUnmarshalling(OHOS::MessageParcel &data, RequestInfo& dataBlock);

} // namespace idlFile
} // namespace custom
} // namespace OHOS

#endif // OHOS_CUSTOM_IDLFILE_IFOOCUSTOM_H

