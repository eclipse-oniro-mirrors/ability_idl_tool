/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
sequenceable test.myseq;
interface test.myinterface;
sequenceable test.IRemoteObject;

interface test.IFoo {
    void void_test_func();
    OrderedMap<boolean, boolean> bool_test_func([in] OrderedMap<boolean, boolean> inParam, [out] OrderedMap<boolean, boolean> outParam, [inout] OrderedMap<boolean, boolean> inoutParam);
    OrderedMap<byte, byte> byte_test_func([in] OrderedMap<byte, byte> inParam, [out] OrderedMap<byte, byte> outParam, [inout] OrderedMap<byte, byte> inoutParam);
    OrderedMap<short, short> short_test_func([in] OrderedMap<short, short> inParam, [out] OrderedMap<short, short> outParam, [inout] OrderedMap<short, short> inoutParam);
    OrderedMap<int, int> int_test_func([in] OrderedMap<int, int> inParam, [out] OrderedMap<int, int> outParam, [inout] OrderedMap<int, int> inoutParam);
    OrderedMap<long, long> long_test_func([in] OrderedMap<long, long> inParam, [out] OrderedMap<long, long> outParam, [inout] OrderedMap<long, long> inoutParam);
    OrderedMap<String, String> string_test_func([in] OrderedMap<String, String> inParam, [out] OrderedMap<String, String> outParam, [inout] OrderedMap<String, String> inoutParam);
    OrderedMap<float, float> float_test_func([in] OrderedMap<float, float> inParam, [out] OrderedMap<float, float> outParam, [inout] OrderedMap<float, float> inoutParam);
    OrderedMap<double, double> double_test_func([in] OrderedMap<double, double> inParam, [out] OrderedMap<double, double> outParam, [inout] OrderedMap<double, double> inoutParam);
    OrderedMap<char, char> char_test_func([in] OrderedMap<char, char> inParam, [out] OrderedMap<char, char> outParam, [inout] OrderedMap<char, char> inoutParam); //Ts不支持char
    OrderedMap<myseq, myseq> seq_test_func([in] OrderedMap<myseq, myseq> inParam, [out] OrderedMap<myseq, myseq> outParam, [inout] OrderedMap<myseq, myseq> inoutParam);
    OrderedMap<myinterface, myinterface> interface_test_func([in] OrderedMap<myinterface, myinterface> inParam, [out] OrderedMap<myinterface, myinterface> outParam, [inout] OrderedMap<myinterface, myinterface> inoutParam);
    OrderedMap<int, int[]> int_2_test_func([in] OrderedMap<int, int[]> inParam, [out] OrderedMap<int, int[]> outParam, [inout] OrderedMap<int, int[]> inoutParam);
    OrderedMap<int, OrderedMap<int, int[]>> OrderedMap_test_func([in] OrderedMap<int, OrderedMap<int, int[]>> inParam, [out] OrderedMap<int, OrderedMap<int, int[]>> outParam, [inout] OrderedMap<int, OrderedMap<int, int[]>> inoutParam);
    OrderedMap<int[], int[]> int_2_test_func([in] OrderedMap<int[], int[]> inParam, [out] OrderedMap<int[], int[]> outParam, [inout] OrderedMap<int[], int[]> inoutParam);
    OrderedMap<int, OrderedMap<int[], int[]>> OrderedMap_test_func([in] OrderedMap<int, OrderedMap<int[], int[]>> inParam, [out] OrderedMap<int, OrderedMap<int[], int[]>> outParam, [inout] OrderedMap<int, OrderedMap<int[], int[]>> inoutParam);
    OrderedMap<IRemoteObject, IRemoteObject> IRemoteObject_test_func([in] OrderedMap<IRemoteObject, IRemoteObject> inParam, [out] OrderedMap<IRemoteObject, IRemoteObject> outParam, [inout] OrderedMap<IRemoteObject, IRemoteObject> inoutParam);
}
