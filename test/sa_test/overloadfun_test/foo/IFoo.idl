/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

rawdata test.myrawdata;
sequenceable test..picture;

interface overload.IFoo {
    [macrondef WATCHER] void overloadfun();
    [macrodef DEVICE] void overloadfun([in] unsigned char inParam);
    void overloadfun([out] unsigned int outParam);
    void overloadfun([out] Map<int,String> outParam);
    void overloadfun([out] Map<int,U16string> outParam);
    void overloadfun([in] unsigned int[] outParam);
    void overloadfun([out] List<Map<int,String>> outParam);
    String overloadfun([out] FileDescriptor outParam);
    void overloadfun([out] List<Map<int,U16string>> outParam);
    U16string overloadfun([out] FileDescriptor outParam);
    U16string overloadfun([in] U16string inParam, [out] U16string outParam, [inout] U16string inoutParam);
    myrawdata overloadfun([in] myrawdata inParam, [out] myrawdata outParam, [inout] myrawdata inoutParam);
    List<myrawdata> overloadfun([in] List<myrawdata> inParam, [out] List<myrawdata> outParam, [inout] List<myrawdata> inoutParam);
    Map<myrawdata, myrawdata> overloadfun([in] Map<myrawdata, myrawdata> inParam, [out] Map<myrawdata, myrawdata> outParam, [inout] Map<myrawdata, myrawdata> inoutParam);
    void overloadfun([in] sharedptr<picture> sharedParam, [out] uniqueptr<picture> uniqueParam, [inout] sptr<picture> sParam);
}
