/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef TEST_FOOPROXY_H
#define TEST_FOOPROXY_H

#include <iremote_proxy.h>
#include "ifoo.h"

namespace test {
class FooProxy : public IRemoteProxy<IFoo> {
public:
    explicit FooProxy(
        const sptr<IRemoteObject>& remote)
        : IRemoteProxy<IFoo>(remote)
    {}

    virtual ~FooProxy()
    {}

    ErrCode uchar_test_func(
        uint8_t inParam,
        uint8_t& outParam,
        uint8_t inoutParam,
        uint8_t& funcResult) override;

    ErrCode ushort_test_func(
        uint16_t inParam,
        uint16_t& outParam,
        uint16_t inoutParam,
        uint16_t& funcResult) override;

    ErrCode uint_test_func(
        uint32_t inParam,
        uint32_t& outParam,
        uint32_t inoutParam,
        uint32_t& funcResult) override;

    ErrCode ulong_test_func(
        uint64_t inParam,
        uint64_t& outParam,
        uint64_t inoutParam,
        uint64_t& funcResult) override;

    ErrCode fd_test_func(
        int inParam,
        int& outParam,
        int inoutParam,
        int& funcResult) override;

    ErrCode remote_object_test_func(
        const sptr<IRemoteObject>& inParam,
        sptr<IRemoteObject>& outParam,
        sptr<IRemoteObject>& inoutParam,
        sptr<IRemoteObject>& funcResult) override;

private:
    static inline BrokerDelegator<FooProxy> delegator_;
};
} // namespace test
#endif // TEST_FOOPROXY_H

